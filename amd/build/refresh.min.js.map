{"version":3,"file":"refresh.min.js","sources":["../src/refresh.js"],"sourcesContent":["/*\n * Refresh content when changed on the system\n *\n * @package    block_deft\n * @module     block_deft/refresh\n * @copyright  2022 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from \"core/fragment\";\nimport Log from \"core/log\";\nimport Socket from \"block_deft/socket\";\nimport Templates from \"core/templates\";\n\nexport default class {\n\n    /**\n     * Listen to WebSocket and refresh content\n     *\n     * @param {int} contextid Context id of block\n     * @param {string} selector Content location to replace\n     * @param {string} token Authentication token to connect service\n     * @param {int} throttle Throttle dely in ms\n     */\n    constructor(contextid, selector, token, throttle) {\n        if (!token) {\n            return;\n        }\n\n        const socket = new Socket(contextid, token);\n\n        socket.subscribe(() => {\n            this.update();\n        });\n\n        this.contextid = contextid;\n        this.selector = selector;\n        this.throttle = throttle;\n        this.throttled = false;\n        this.lastupdate = 0;\n    }\n\n    /**\n     * Refresh content\n     *\n     */\n    update() {\n        if (document.querySelector(this.selector)) {\n            let content = document.querySelector(this.selector).parentNode,\n                component = content.closest('[data-component]')\n                    && content.closest('[data-component]').getAttribute('data-component')\n                    || 'block_deft',\n                data = {};\n            if (!content) {\n                return;\n            }\n\n            if (\n                (this.lastupdate + this.throttle > Date.now())\n                || (document.activeElement.closest(this.selector) && document.activeElement.closest('select'))\n            ) {\n                if (\n                    !this.throttled\n                    || (this.lastupdate + this.throttle < Date.now())\n                ) {\n                    setTimeout(() => {\n                        this.update();\n                    }, Math.max(this.lastupdate + this.throttle - Date.now(), 40));\n                    this.throttled = true;\n                }\n\n                return;\n            }\n\n            document.querySelector(this.selector)\n                .querySelectorAll('[data-type=\"comments\"] .block_deft_comments.expanded')\n                .forEach((opencomments) => {\n                    data.opencomments = data.opencomments || [];\n                    data.opencomments.push(opencomments.closest('[data-task]').getAttribute('data-task'));\n                });\n\n            if (document.querySelector(this.selector).closest('[data-modified]')) {\n                data.lastmodified = document.querySelector(this.selector).closest('[data-modified]').getAttribute('data-modified');\n            }\n\n            Fragment.loadFragment(\n                component,\n                'content',\n                this.contextid,\n                {\n                    jsondata: JSON.stringify(data)\n                }\n            ).done((html, js) => {\n                if (html) {\n                    this.replace(content, html, js);\n                }\n            }).catch(Log.debug);\n\n            this.throttled = false;\n            this.lastupdate = Date.now();\n        }\n    }\n\n    /**\n     * Replace content\n     *\n     * @param {DOMNode} content\n     * @param {string} html New content\n     * @param {string} js Scripts to run after replacement\n     */\n    replace(content, html, js) {\n        let setScroll = () => {\n                return true;\n            },\n            setHeight = () => {\n                return true;\n            };\n        content.style.height = content.offsetHeight;\n        setTimeout(() => {\n            content.style.height = null;\n        });\n        content.querySelectorAll('.block_deft_comments').forEach((comments) => {\n            const position = comments.scrollTop,\n                task = comments.closest('[data-task]').getAttribute('data-task'),\n                recurse = setScroll;\n            Log.debug(position);\n            setScroll = () => {\n                content.querySelectorAll('[data-task=\"' + task + '\"]').forEach((task) => {\n                    task.querySelector('.block_deft_comments').scrollTop = position;\n                    Log.debug(task.querySelector('.block_deft_comments'));\n                    Log.debug(position);\n                });\n                recurse();\n            };\n        });\n\n        content.querySelectorAll('[data-summary]').forEach((summary) => {\n            const height = summary.offsetHeight,\n                task = summary.getAttribute('data-summary'),\n                recurse = setHeight;\n            setHeight = () => {\n                content.querySelectorAll('[data-summary=\"' + task + '\"]').forEach((summary) => {\n                    summary.setAttribute('style', 'min-height: ' + height + 'px;');\n                });\n                recurse();\n            };\n        });\n        Templates.replaceNodeContents(content, html, js);\n        setScroll();\n        setHeight();\n    }\n}\n"],"names":["constructor","contextid","selector","token","throttle","Socket","subscribe","update","throttled","lastupdate","document","querySelector","this","content","parentNode","component","closest","getAttribute","data","Date","now","activeElement","setTimeout","Math","max","querySelectorAll","forEach","opencomments","push","lastmodified","loadFragment","jsondata","JSON","stringify","done","html","js","replace","catch","Log","debug","setScroll","setHeight","style","height","offsetHeight","comments","position","scrollTop","task","recurse","summary","setAttribute","replaceNodeContents"],"mappings":";;;;;;;;uRAwBIA,YAAYC,UAAWC,SAAUC,MAAOC,cAC/BD,aAIU,IAAIE,gBAAOJ,UAAWE,OAE9BG,WAAU,UACRC,iBAGJN,UAAYA,eACZC,SAAWA,cACXE,SAAWA,cACXI,WAAY,OACZC,WAAa,EAOtBF,YACQG,SAASC,cAAcC,KAAKV,UAAW,KACnCW,QAAUH,SAASC,cAAcC,KAAKV,UAAUY,WAChDC,UAAYF,QAAQG,QAAQ,qBACrBH,QAAQG,QAAQ,oBAAoBC,aAAa,mBACjD,aACPC,KAAO,OACNL,kBAKAD,KAAKH,WAAaG,KAAKR,SAAWe,KAAKC,OACpCV,SAASW,cAAcL,QAAQJ,KAAKV,WAAaQ,SAASW,cAAcL,QAAQ,wBAG/EJ,KAAKJ,WACFI,KAAKH,WAAaG,KAAKR,SAAWe,KAAKC,SAE3CE,YAAW,UACFf,WACNgB,KAAKC,IAAIZ,KAAKH,WAAaG,KAAKR,SAAWe,KAAKC,MAAO,UACrDZ,WAAY,IAMzBE,SAASC,cAAcC,KAAKV,UACvBuB,iBAAiB,wDACjBC,SAASC,eACNT,KAAKS,aAAeT,KAAKS,cAAgB,GACzCT,KAAKS,aAAaC,KAAKD,aAAaX,QAAQ,eAAeC,aAAa,iBAG5EP,SAASC,cAAcC,KAAKV,UAAUc,QAAQ,qBAC9CE,KAAKW,aAAenB,SAASC,cAAcC,KAAKV,UAAUc,QAAQ,mBAAmBC,aAAa,oCAG7Fa,aACLf,UACA,UACAH,KAAKX,UACL,CACI8B,SAAUC,KAAKC,UAAUf,QAE/BgB,MAAK,CAACC,KAAMC,MACND,WACKE,QAAQxB,QAASsB,KAAMC,OAEjCE,MAAMC,aAAIC,YAERhC,WAAY,OACZC,WAAaU,KAAKC,OAW/BiB,QAAQxB,QAASsB,KAAMC,QACfK,UAAY,KACD,EAEXC,UAAY,KACD,EAEf7B,QAAQ8B,MAAMC,OAAS/B,QAAQgC,aAC/BvB,YAAW,KACPT,QAAQ8B,MAAMC,OAAS,QAE3B/B,QAAQY,iBAAiB,wBAAwBC,SAASoB,iBAChDC,SAAWD,SAASE,UACtBC,KAAOH,SAAS9B,QAAQ,eAAeC,aAAa,aACpDiC,QAAUT,uBACVD,MAAMO,UACVN,UAAY,KACR5B,QAAQY,iBAAiB,eAAiBwB,KAAO,MAAMvB,SAASuB,OAC5DA,KAAKtC,cAAc,wBAAwBqC,UAAYD,sBACnDP,MAAMS,KAAKtC,cAAc,sCACzB6B,MAAMO,aAEdG,cAIRrC,QAAQY,iBAAiB,kBAAkBC,SAASyB,gBAC1CP,OAASO,QAAQN,aACnBI,KAAOE,QAAQlC,aAAa,gBAC5BiC,QAAUR,UACdA,UAAY,KACR7B,QAAQY,iBAAiB,kBAAoBwB,KAAO,MAAMvB,SAASyB,UAC/DA,QAAQC,aAAa,QAAS,eAAiBR,OAAS,UAE5DM,iCAGEG,oBAAoBxC,QAASsB,KAAMC,IAC7CK,YACAC"}