{"version":3,"file":"refresh.min.js","sources":["../src/refresh.js"],"sourcesContent":["/*\n * Refresh content when changed on the system\n *\n * @package    block_deft\n * @module     block_deft/refresh\n * @copyright  2022 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from \"core/fragment\";\nimport Log from \"core/log\";\nimport Socket from \"block_deft/socket\";\nimport Templates from \"core/templates\";\n\nexport default class {\n\n    /**\n     * Listen to WebSocket and refresh content\n     *\n     * @param {int} contextid Context id of block\n     * @param {string} selector Content location to replace\n     * @param {string} token Authentication token to connect service\n     * @param {int} throttle Throttle dely in ms\n     */\n    constructor(contextid, selector, token, throttle) {\n        if (!token) {\n            return;\n        }\n        this.contextid = contextid;\n        this.selector = selector;\n        this.throttle = throttle;\n        this.throttled = false;\n        this.lastupdate = 0;\n        let socket = new Socket(contextid, token);\n        socket.subscribe(() => {\n            this.update();\n        });\n    }\n\n    /**\n     * Refresh content\n     *\n     */\n    update() {\n        let content = document.querySelector(this.selector).parentNode,\n            component = content.closest('[data-component]')\n                && content.closest('[data-component]').getAttribute('data-component')\n                || 'block_deft',\n            data = {};\n        if (!content) {\n            return;\n        }\n\n        if (\n            (this.lastupdate + this.throttle > Date.now())\n            || (document.activeElement.closest(this.selector) && document.activeElement.closest('select'))\n        ) {\n            if (\n                !this.throttled\n                || (this.lastupdate + this.throttle < Date.now())\n            ) {\n                setTimeout(() => {\n                    this.update();\n                }, Math.max(this.lastupdate + this.throttle - Date.now(), 40));\n                this.throttled = true;\n            }\n\n            return;\n        }\n\n        document.querySelector(this.selector)\n            .querySelectorAll('[data-type=\"comments\"] .block_deft_comments.expanded')\n            .forEach((opencomments) => {\n                data.opencomments = data.opencomments || [];\n                data.opencomments.push(opencomments.closest('[data-task]').getAttribute('data-task'));\n            });\n\n        if (document.querySelector(this.selector).closest('[data-modified]')) {\n            data.lastmodified = document.querySelector(this.selector).closest('[data-modified]').getAttribute('data-modified');\n        }\n\n        Fragment.loadFragment(\n            component,\n            'content',\n            this.contextid,\n            {\n                jsondata: JSON.stringify(data)\n            }\n        ).done((html, js) => {\n            if (html) {\n                this.replace(content, html, js);\n            }\n        }).catch(Log.debug);\n\n        this.throttled = false;\n        this.lastupdate = Date.now();\n    }\n\n    /**\n     * Replace content\n     *\n     * @param {DOMNode} content\n     * @param {string} html New content\n     * @param {string} js Scripts to run after replacement\n     */\n    replace(content, html, js) {\n        let setScroll = () => {\n                return true;\n            },\n            setHeight = () => {\n                return true;\n            };\n        content.style.height = content.offsetHeight;\n        setTimeout(() => {\n            content.style.height = null;\n        });\n        content.querySelectorAll('.block_deft_comments').forEach((comments) => {\n            const position = comments.scrollTop,\n                task = comments.closest('[data-task]').getAttribute('data-task'),\n                recurse = setScroll;\n            Log.debug(position);\n            setScroll = () => {\n                content.querySelectorAll('[data-task=\"' + task + '\"]').forEach((task) => {\n                    task.querySelector('.block_deft_comments').scrollTop = position;\n                    Log.debug(task.querySelector('.block_deft_comments'));\n                    Log.debug(position);\n                });\n                recurse();\n            };\n        });\n\n        content.querySelectorAll('[data-summary]').forEach((summary) => {\n            const height = summary.offsetHeight,\n                task = summary.getAttribute('data-summary'),\n                recurse = setHeight;\n            setHeight = () => {\n                content.querySelectorAll('[data-summary=\"' + task + '\"]').forEach((summary) => {\n                    summary.setAttribute('style', 'min-height: ' + height + 'px;');\n                });\n                recurse();\n            };\n        });\n        Templates.replaceNodeContents(content, html, js);\n        setScroll();\n        setHeight();\n    }\n}\n"],"names":["contextid","selector","token","throttle","throttled","lastupdate","Socket","subscribe","_this","update","content","document","querySelector","this","parentNode","component","closest","getAttribute","data","Date","now","activeElement","setTimeout","_this2","Math","max","querySelectorAll","forEach","opencomments","push","lastmodified","loadFragment","jsondata","JSON","stringify","done","html","js","replace","catch","Log","debug","setScroll","setHeight","style","height","offsetHeight","comments","position","scrollTop","task","recurse","summary","setAttribute","replaceNodeContents"],"mappings":"kyBAwBgBA,UAAWC,SAAUC,MAAOC,wKAC/BD,cAGAF,UAAYA,eACZC,SAAWA,cACXE,SAAWA,cACXC,WAAY,OACZC,WAAa,EACL,IAAIC,gBAAON,UAAWE,OAC5BK,WAAU,WACbC,MAAKC,iHAQb,2BACQC,QAAUC,SAASC,cAAcC,KAAKZ,UAAUa,WAChDC,UAAYL,QAAQM,QAAQ,qBACrBN,QAAQM,QAAQ,oBAAoBC,aAAa,mBACjD,aACPC,KAAO,GACNR,UAKAG,KAAKR,WAAaQ,KAAKV,SAAWgB,KAAKC,OACpCT,SAASU,cAAcL,QAAQH,KAAKZ,WAAaU,SAASU,cAAcL,QAAQ,YAG/EH,KAAKT,WACFS,KAAKR,WAAaQ,KAAKV,SAAWgB,KAAKC,SAE3CE,YAAW,WACPC,OAAKd,WACNe,KAAKC,IAAIZ,KAAKR,WAAaQ,KAAKV,SAAWgB,KAAKC,MAAO,UACrDhB,WAAY,IAMzBO,SAASC,cAAcC,KAAKZ,UACvByB,iBAAiB,wDACjBC,SAAQ,SAACC,cACNV,KAAKU,aAAeV,KAAKU,cAAgB,GACzCV,KAAKU,aAAaC,KAAKD,aAAaZ,QAAQ,eAAeC,aAAa,iBAG5EN,SAASC,cAAcC,KAAKZ,UAAUe,QAAQ,qBAC9CE,KAAKY,aAAenB,SAASC,cAAcC,KAAKZ,UAAUe,QAAQ,mBAAmBC,aAAa,oCAG7Fc,aACLhB,UACA,UACAF,KAAKb,UACL,CACIgC,SAAUC,KAAKC,UAAUhB,QAE/BiB,MAAK,SAACC,KAAMC,IACND,MACAb,OAAKe,QAAQ5B,QAAS0B,KAAMC,OAEjCE,MAAMC,aAAIC,YAERrC,WAAY,OACZC,WAAac,KAAKC,+BAU3B,SAAQV,QAAS0B,KAAMC,QACfK,UAAY,kBACD,GAEXC,UAAY,kBACD,GAEfjC,QAAQkC,MAAMC,OAASnC,QAAQoC,aAC/BxB,YAAW,WACPZ,QAAQkC,MAAMC,OAAS,QAE3BnC,QAAQgB,iBAAiB,wBAAwBC,SAAQ,SAACoB,cAChDC,SAAWD,SAASE,UACtBC,KAAOH,SAAS/B,QAAQ,eAAeC,aAAa,aACpDkC,QAAUT,uBACVD,MAAMO,UACVN,UAAY,WACRhC,QAAQgB,iBAAiB,eAAiBwB,KAAO,MAAMvB,SAAQ,SAACuB,MAC5DA,KAAKtC,cAAc,wBAAwBqC,UAAYD,sBACnDP,MAAMS,KAAKtC,cAAc,sCACzB6B,MAAMO,aAEdG,cAIRzC,QAAQgB,iBAAiB,kBAAkBC,SAAQ,SAACyB,aAC1CP,OAASO,QAAQN,aACnBI,KAAOE,QAAQnC,aAAa,gBAC5BkC,QAAUR,UACdA,UAAY,WACRjC,QAAQgB,iBAAiB,kBAAoBwB,KAAO,MAAMvB,SAAQ,SAACyB,SAC/DA,QAAQC,aAAa,QAAS,eAAiBR,OAAS,UAE5DM,iCAGEG,oBAAoB5C,QAAS0B,KAAMC,IAC7CK,YACAC"}