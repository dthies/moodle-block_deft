{"version":3,"file":"janus-gateway.min.js","sources":["../src/janus-gateway.js"],"sourcesContent":["/*\n\tThe MIT License (MIT)\n\n\tCopyright (c) 2016 Meetecho\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the \"Software\"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\tOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\tTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\tOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\tARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\tOTHER DEALINGS IN THE SOFTWARE.\n */\n\n// List of sessions\nJanus.sessions = new Map();\n\nJanus.isExtensionEnabled = function() {\n\tif(navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n\t\t// No need for the extension, getDisplayMedia is supported\n\t\treturn true;\n\t}\n\tif(window.navigator.userAgent.match('Chrome')) {\n\t\tlet chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n\t\tlet maxver = 33;\n\t\tif(window.navigator.userAgent.match('Linux'))\n\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\tif(chromever >= 26 && chromever <= maxver) {\n\t\t\t// Older versions of Chrome don't support this extension-based approach, so lie\n\t\t\treturn true;\n\t\t}\n\t\treturn Janus.extension.isInstalled();\n\t} else {\n\t\t// Firefox and others, no need for the extension (but this doesn't mean it will work)\n\t\treturn true;\n\t}\n};\n\nvar defaultExtension = {\n\t// Screensharing Chrome Extension ID\n\textensionId: 'hapfgfdkleiggjjpfpenajgdnfckjpaj',\n\tisInstalled: function() { return document.querySelector('#janus-extension-installed') !== null; },\n\tgetScreen: function (callback) {\n\t\tlet pending = window.setTimeout(function () {\n\t\t\tlet error = new Error('NavigatorUserMediaError');\n\t\t\terror.name = 'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n\t\t\treturn callback(error);\n\t\t}, 1000);\n\t\tthis.cache[pending] = callback;\n\t\twindow.postMessage({ type: 'janusGetScreen', id: pending }, '*');\n\t},\n\tinit: function () {\n\t\tlet cache = {};\n\t\tthis.cache = cache;\n\t\t// Wait for events from the Chrome Extension\n\t\twindow.addEventListener('message', function (event) {\n\t\t\tif(event.origin != window.location.origin)\n\t\t\t\treturn;\n\t\t\tif(event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n\t\t\t\tlet callback = cache[event.data.id];\n\t\t\t\tdelete cache[event.data.id];\n\t\t\t\tif(event.data.sourceId === '') {\n\t\t\t\t\t// user canceled\n\t\t\t\t\tlet error = new Error('NavigatorUserMediaError');\n\t\t\t\t\terror.name = 'You cancelled the request for permission, giving up...';\n\t\t\t\t\tcallback(error);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, event.data.sourceId);\n\t\t\t\t}\n\t\t\t} else if(event.data.type == 'janusGetScreenPending') {\n\t\t\t\twindow.clearTimeout(event.data.id);\n\t\t\t}\n\t\t});\n\t}\n};\n\nJanus.useDefaultDependencies = function (deps) {\n\tlet f = (deps && deps.fetch) || fetch;\n\tlet p = (deps && deps.Promise) || Promise;\n\tlet socketCls = (deps && deps.WebSocket) || WebSocket;\n\n\treturn {\n\t\tnewWebSocket: function(server, proto) { return new socketCls(server, proto); },\n\t\textension: (deps && deps.extension) || defaultExtension,\n\t\tisArray: function(arr) { return Array.isArray(arr); },\n\t\twebRTCAdapter: (deps && deps.adapter) || adapter,\n\t\thttpAPICall: function(url, options) {\n\t\t\tlet fetchOptions = {\n\t\t\t\tmethod: options.verb,\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json, text/plain, */*'\n\t\t\t\t},\n\t\t\t\tcache: 'no-cache'\n\t\t\t};\n\t\t\tif(options.verb === \"POST\") {\n\t\t\t\tfetchOptions.headers['Content-Type'] = 'application/json';\n\t\t\t}\n\t\t\tif(typeof options.withCredentials !== 'undefined') {\n\t\t\t\tfetchOptions.credentials = options.withCredentials === true ? 'include' : (options.withCredentials ? options.withCredentials : 'omit');\n\t\t\t}\n\t\t\tif(options.body) {\n\t\t\t\tfetchOptions.body = JSON.stringify(options.body);\n\t\t\t}\n\n\t\t\tlet fetching = f(url, fetchOptions).catch(function(error) {\n\t\t\t\treturn p.reject({message: 'Probably a network error, is the server down?', error: error});\n\t\t\t});\n\n\t\t\t/*\n\t\t\t * fetch() does not natively support timeouts.\n\t\t\t * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n\t\t\t */\n\n\t\t\tif(options.timeout) {\n\t\t\t\tlet timeout = new p(function(resolve, reject) {\n\t\t\t\t\tlet timerId = setTimeout(function() {\n\t\t\t\t\t\tclearTimeout(timerId);\n\t\t\t\t\t\treturn reject({message: 'Request timed out', timeout: options.timeout});\n\t\t\t\t\t}, options.timeout);\n\t\t\t\t});\n\t\t\t\tfetching = p.race([fetching, timeout]);\n\t\t\t}\n\n\t\t\tfetching.then(function(response) {\n\t\t\t\tif(response.ok) {\n\t\t\t\t\tif(typeof(options.success) === typeof(Janus.noop)) {\n\t\t\t\t\t\treturn response.json().then(function(parsed) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\toptions.success(parsed);\n\t\t\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\t\t\tJanus.error('Unhandled httpAPICall success callback error', error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function(error) {\n\t\t\t\t\t\t\treturn p.reject({message: 'Failed to parse response body', error: error, response: response});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn p.reject({message: 'API call failed', response: response});\n\t\t\t\t}\n\t\t\t}).catch(function(error) {\n\t\t\t\tif(typeof(options.error) === typeof(Janus.noop)) {\n\t\t\t\t\toptions.error(error.message || '<< internal error >>', error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fetching;\n\t\t}\n\t}\n};\n\nJanus.useOldDependencies = function (deps) {\n\tlet jq = (deps && deps.jQuery) || jQuery;\n\tlet socketCls = (deps && deps.WebSocket) || WebSocket;\n\treturn {\n\t\tnewWebSocket: function(server, proto) { return new socketCls(server, proto); },\n\t\tisArray: function(arr) { return jq.isArray(arr); },\n\t\textension: (deps && deps.extension) || defaultExtension,\n\t\twebRTCAdapter: (deps && deps.adapter) || adapter,\n\t\thttpAPICall: function(url, options) {\n\t\t\tlet payload = (typeof options.body !== 'undefined') ? {\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tdata: JSON.stringify(options.body)\n\t\t\t} : {};\n\t\t\tlet credentials = (typeof options.withCredentials !== 'undefined') ? {xhrFields: {withCredentials: options.withCredentials}} : {};\n\n\t\t\treturn jq.ajax(jq.extend(payload, credentials, {\n\t\t\t\turl: url,\n\t\t\t\ttype: options.verb,\n\t\t\t\tcache: false,\n\t\t\t\tdataType: 'json',\n\t\t\t\tasync: options.async,\n\t\t\t\ttimeout: options.timeout,\n\t\t\t\tsuccess: function(result) {\n\t\t\t\t\tif(typeof(options.success) === typeof(Janus.noop)) {\n\t\t\t\t\t\toptions.success(result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(xhr, status, err) {\n\t\t\t\t\tif(typeof(options.error) === typeof(Janus.noop)) {\n\t\t\t\t\t\toptions.error(status, err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t};\n};\n\n// Helper function to convert a deprecated media object to a tracks array\nJanus.mediaToTracks = function(media) {\n\tlet tracks = [];\n\tif(!media) {\n\t\t// Default is bidirectional audio and video, using default devices\n\t\ttracks.push({ type: 'audio', capture: true, recv: true });\n\t\ttracks.push({ type: 'video', capture: true, recv: true });\n\t} else {\n\t\tif(!media.keepAudio && media.audio !== false && ((typeof media.audio === 'undefined') || media.audio || media.audioSend || media.audioRecv ||\n\t\t\t\tmedia.addAudio || media.replaceAudio || media.removeAudio)) {\n\t\t\t// We may need an audio track\n\t\t\tlet track = { type: 'audio' };\n\t\t\tif(media.removeAudio) {\n\t\t\t\ttrack.remove = true;\n\t\t\t} else {\n\t\t\t\tif(media.addAudio)\n\t\t\t\t\ttrack.add = true;\n\t\t\t\telse if(media.replaceAudio)\n\t\t\t\t\ttrack.replace = true;\n\t\t\t\t// Check if we need to capture an audio device\n\t\t\t\tif(media.audioSend !== false)\n\t\t\t\t\ttrack.capture = media.audio || true;\n\t\t\t\t// Check if we need to receive audio\n\t\t\t\tif(media.audioRecv !== false)\n\t\t\t\t\ttrack.recv = true;\n\t\t\t}\n\t\t\t// Add an audio track if needed\n\t\t\tif(track.remove || track.capture || track.recv)\n\t\t\t\ttracks.push(track);\n\t\t}\n\t\tif(!media.keepVideo && media.video !== false && ((typeof media.video === 'undefined') || media.video || media.videoSend || media.videoRecv ||\n\t\t\t\tmedia.addVideo || media.replaceVideo || media.removeVideo)) {\n\t\t\t// We may need a video track\n\t\t\tlet track = { type: 'video' };\n\t\t\tif(media.removeVideo) {\n\t\t\t\ttrack.remove = true;\n\t\t\t} else {\n\t\t\t\tif(media.addVideo)\n\t\t\t\t\ttrack.add = true;\n\t\t\t\telse if(media.replaceVideo)\n\t\t\t\t\ttrack.replace = true;\n\t\t\t\t// Check if we need to capture a video device\n\t\t\t\tif(media.videoSend !== false) {\n\t\t\t\t\ttrack.capture = media.video || true;\n\t\t\t\t\tif(['screen', 'window', 'desktop'].includes(track.capture)) {\n\t\t\t\t\t\t// Change the type to 'screen'\n\t\t\t\t\t\ttrack.type = 'screen';\n\t\t\t\t\t\ttrack.capture = { video: {} };\n\t\t\t\t\t\t// Check if there's constraints\n\t\t\t\t\t\tif(media.screenshareFrameRate)\n\t\t\t\t\t\t\ttrack.capture.frameRate = media.screenshareFrameRate;\n\t\t\t\t\t\tif(media.screenshareHeight)\n\t\t\t\t\t\t\ttrack.capture.height = media.screenshareHeight;\n\t\t\t\t\t\tif(media.screenshareWidth)\n\t\t\t\t\t\t\ttrack.capture.width = media.screenshareWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check if we need to receive video\n\t\t\t\tif(media.videoRecv !== false)\n\t\t\t\t\ttrack.recv = true;\n\t\t\t}\n\t\t\t// Add a video track if needed\n\t\t\tif(track.remove || track.capture || track.recv)\n\t\t\t\ttracks.push(track);\n\t\t}\n\t\tif(media.data) {\n\t\t\t// We need a data channel\n\t\t\ttracks.push({ type: 'data' });\n\t\t}\n\t}\n\t// Done\n\treturn tracks;\n};\n\n// Helper function to convert a track object to a set of constraints\nJanus.trackConstraints = function(track) {\n\tlet constraints = {};\n\tif(!track || !track.capture)\n\t\treturn constraints;\n\tif(track.type === 'audio') {\n\t\t// Just put the capture part in the constraints\n\t\tconstraints.audio = track.capture;\n\t} else if(track.type === 'video') {\n\t\t// Check if one of the keywords was passed\n\t\tif((track.simulcast || track.svc) && track.capture === true)\n\t\t\ttrack.capture = 'hires';\n\t\tif(track.capture === true || typeof track.capture === 'object') {\n\t\t\t// Use the provided capture object as video constraint\n\t\t\tconstraints.video = track.capture;\n\t\t} else {\n\t\t\tlet width = 0;\n\t\t\tlet height = 0;\n\t\t\tif(track.capture === 'lowres') {\n\t\t\t\t// Small resolution, 4:3\n\t\t\t\twidth = 320;\n\t\t\t\theight = 240;\n\t\t\t} else if(track.capture === 'lowres-16:9') {\n\t\t\t\t// Small resolution, 16:9\n\t\t\t\twidth = 320;\n\t\t\t\theight = 180;\n\t\t\t} else if(track.capture === 'hires' || track.capture === 'hires-16:9' || track.capture === 'hdres') {\n\t\t\t\t// High(HD) resolution is only 16:9\n\t\t\t\twidth = 1280;\n\t\t\t\theight = 720;\n\t\t\t} else if(track.capture === 'fhdres') {\n\t\t\t\t// Full HD resolution is only 16:9\n\t\t\t\twidth = 1920;\n\t\t\t\theight = 1080;\n\t\t\t} else if(track.capture === '4kres') {\n\t\t\t\t// 4K resolution is only 16:9\n\t\t\t\twidth = 3840;\n\t\t\t\theight = 2160;\n\t\t\t} else if(track.capture === 'stdres') {\n\t\t\t\t// Normal resolution, 4:3\n\t\t\t\twidth = 640;\n\t\t\t\theight = 480;\n\t\t\t} else if(track.capture === 'stdres-16:9') {\n\t\t\t\t// Normal resolution, 16:9\n\t\t\t\twidth = 640;\n\t\t\t\theight = 360;\n\t\t\t} else {\n\t\t\t\tJanus.log('Default video setting is stdres 4:3');\n\t\t\t\twidth = 640;\n\t\t\t\theight = 480;\n\t\t\t}\n\t\t\tconstraints.video = {\n\t\t\t\twidth: { ideal: width },\n\t\t\t\theight: { ideal: height }\n\t\t\t};\n\t\t}\n\t} else if(track.type === 'screen') {\n\t\t// Use the provided capture object as video constraint\n\t\tconstraints.video = track.capture;\n\t}\n\treturn constraints;\n};\n\nJanus.noop = function() {};\n\nJanus.dataChanDefaultLabel = \"JanusDataChannel\";\n\n// Note: in the future we may want to change this, e.g., as was\n// attempted in https://github.com/meetecho/janus-gateway/issues/1670\nJanus.endOfCandidates = null;\n\n// Stop all tracks from a given stream\nJanus.stopAllTracks = function(stream) {\n\ttry {\n\t\t// Try a MediaStreamTrack.stop() for each track\n\t\tlet tracks = stream.getTracks();\n\t\tfor(let mst of tracks) {\n\t\t\tJanus.log(mst);\n\t\t\tif(mst && mst.dontStop !== true) {\n\t\t\t\tmst.stop();\n\t\t\t}\n\t\t}\n\t} catch(e) {\n\t\t// Do nothing if this fails\n\t}\n};\n\n// Initialization\nJanus.init = function(options) {\n\toptions = options || {};\n\toptions.callback = (typeof options.callback == \"function\") ? options.callback : Janus.noop;\n\tif(Janus.initDone) {\n\t\t// Already initialized\n\t\toptions.callback();\n\t} else {\n\t\tif(typeof console.log == \"undefined\") {\n\t\t\tconsole.log = function() {};\n\t\t}\n\t\t// Console logging (all debugging disabled by default)\n\t\tJanus.trace = Janus.noop;\n\t\tJanus.debug = Janus.noop;\n\t\tJanus.vdebug = Janus.noop;\n\t\tJanus.log = Janus.noop;\n\t\tJanus.warn = Janus.noop;\n\t\tJanus.error = Janus.noop;\n\t\tif(options.debug === true || options.debug === \"all\") {\n\t\t\t// Enable all debugging levels\n\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\tJanus.log = console.log.bind(console);\n\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\tJanus.error = console.error.bind(console);\n\t\t} else if(Array.isArray(options.debug)) {\n\t\t\tfor(let d of options.debug) {\n\t\t\t\tswitch(d) {\n\t\t\t\t\tcase \"trace\":\n\t\t\t\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"debug\":\n\t\t\t\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"vdebug\":\n\t\t\t\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\tJanus.log = console.log.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"warn\":\n\t\t\t\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\tJanus.error = console.error.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tJanus.log(\"Initializing library\");\n\n\t\tlet usedDependencies = options.dependencies || Janus.useDefaultDependencies();\n\t\tJanus.isArray = usedDependencies.isArray;\n\t\tJanus.webRTCAdapter = usedDependencies.webRTCAdapter;\n\t\tJanus.httpAPICall = usedDependencies.httpAPICall;\n\t\tJanus.newWebSocket = usedDependencies.newWebSocket;\n\t\tJanus.extension = usedDependencies.extension;\n\t\tJanus.extension.init();\n\n\t\t// Helper method to enumerate devices\n\t\tJanus.listDevices = function(callback, config) {\n\t\t\tcallback = (typeof callback == \"function\") ? callback : Janus.noop;\n\t\t\tif(!config)\n\t\t\t\tconfig = { audio: true, video: true };\n\t\t\tif(Janus.isGetUserMediaAvailable()) {\n\t\t\t\tnavigator.mediaDevices.getUserMedia(config)\n\t\t\t\t\t.then(function(stream) {\n\t\t\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\n\t\t\t\t\t\t\tJanus.debug(devices);\n\t\t\t\t\t\t\tcallback(devices);\n\t\t\t\t\t\t\t// Get rid of the now useless stream\n\t\t\t\t\t\t\tJanus.stopAllTracks(stream);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function(err) {\n\t\t\t\t\t\tJanus.error(err);\n\t\t\t\t\t\tcallback([]);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tJanus.warn(\"navigator.mediaDevices unavailable\");\n\t\t\t\tcallback([]);\n\t\t\t}\n\t\t};\n\t\t// Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n\t\tJanus.attachMediaStream = function(element, stream) {\n\t\t\ttry {\n\t\t\t\telement.srcObject = stream;\n\t\t\t} catch (e) {\n\t\t\t\ttry {\n\t\t\t\t\telement.src = URL.createObjectURL(stream);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tJanus.error(\"Error attaching stream to element\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tJanus.reattachMediaStream = function(to, from) {\n\t\t\ttry {\n\t\t\t\tto.srcObject = from.srcObject;\n\t\t\t} catch (e) {\n\t\t\t\ttry {\n\t\t\t\t\tto.src = from.src;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tJanus.error(\"Error reattaching stream to element\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// Detect tab close: make sure we don't loose existing onbeforeunload handlers\n\t\t// (note: for iOS we need to subscribe to a different event, 'pagehide', see\n\t\t// https://gist.github.com/thehunmonkgroup/6bee8941a49b86be31a787fe8f4b8cfe)\n\t\tlet iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) >= 0;\n\t\tlet eventName = iOS ? 'pagehide' : 'beforeunload';\n\t\tlet oldOBF = window[\"on\" + eventName];\n\t\twindow.addEventListener(eventName, function() {\n\t\t\tJanus.log(\"Closing window\");\n\t\t\tfor(const [sessionId, session] of Janus.sessions) {\n\t\t\t\tif(session && session.destroyOnUnload) {\n\t\t\t\t\tJanus.log(\"Destroying session \" + sessionId);\n\t\t\t\t\tsession.destroy({unload: true, notifyDestroyed: false});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(oldOBF && typeof oldOBF == \"function\") {\n\t\t\t\toldOBF();\n\t\t\t}\n\t\t});\n\t\t// If this is a Safari, check if VP8 or VP9 are supported\n\t\tJanus.safariVp8 = false;\n\t\tJanus.safariVp9 = false;\n\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'safari' &&\n\t\t\t\tJanus.webRTCAdapter.browserDetails.version >= 605) {\n\t\t\t// Let's see if RTCRtpSender.getCapabilities() is there\n\t\t\tif(RTCRtpSender && RTCRtpSender.getCapabilities && RTCRtpSender.getCapabilities(\"video\") &&\n\t\t\t\t\tRTCRtpSender.getCapabilities(\"video\").codecs && RTCRtpSender.getCapabilities(\"video\").codecs.length) {\n\t\t\t\tfor(let codec of RTCRtpSender.getCapabilities(\"video\").codecs) {\n\t\t\t\t\tif(codec && codec.mimeType && codec.mimeType.toLowerCase() === \"video/vp8\") {\n\t\t\t\t\t\tJanus.safariVp8 = true;\n\t\t\t\t\t} else if(codec && codec.mimeType && codec.mimeType.toLowerCase() === \"video/vp9\") {\n\t\t\t\t\t\tJanus.safariVp9 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(Janus.safariVp8) {\n\t\t\t\t\tJanus.log(\"This version of Safari supports VP8\");\n\t\t\t\t} else {\n\t\t\t\t\tJanus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n\t\t\t\t\t\t\"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We do it in a very ugly way, as there's no alternative...\n\t\t\t\t// We create a PeerConnection to see if VP8 is in an offer\n\t\t\t\tlet testpc = new RTCPeerConnection({});\n\t\t\t\ttestpc.createOffer({offerToReceiveVideo: true}).then(function(offer) {\n\t\t\t\t\tJanus.safariVp8 = offer.sdp.indexOf(\"VP8\") !== -1;\n\t\t\t\t\tJanus.safariVp9 = offer.sdp.indexOf(\"VP9\") !== -1;\n\t\t\t\t\tif(Janus.safariVp8) {\n\t\t\t\t\t\tJanus.log(\"This version of Safari supports VP8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n\t\t\t\t\t\t\t\"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n\t\t\t\t\t}\n\t\t\t\t\ttestpc.close();\n\t\t\t\t\ttestpc = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tJanus.initDone = true;\n\t\toptions.callback();\n\t}\n};\n\n// Helper method to check whether WebRTC is supported by this browser\nJanus.isWebrtcSupported = function() {\n\treturn !!window.RTCPeerConnection;\n};\n// Helper method to check whether devices can be accessed by this browser (e.g., not possible via plain HTTP)\nJanus.isGetUserMediaAvailable = function() {\n\treturn navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n};\n\n// Helper method to create random identifiers (e.g., transaction)\nJanus.randomString = function(len) {\n\tlet charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tlet randomString = '';\n\tfor(let i=0; i<len; i++) {\n\t\tlet randomPoz = Math.floor(Math.random() * charSet.length);\n\t\trandomString += charSet.charAt(randomPoz);\n\t}\n\treturn randomString;\n};\n\nfunction Janus(gatewayCallbacks) {\n\tgatewayCallbacks = gatewayCallbacks || {};\n\tgatewayCallbacks.success = (typeof gatewayCallbacks.success == \"function\") ? gatewayCallbacks.success : Janus.noop;\n\tgatewayCallbacks.error = (typeof gatewayCallbacks.error == \"function\") ? gatewayCallbacks.error : Janus.noop;\n\tgatewayCallbacks.destroyed = (typeof gatewayCallbacks.destroyed == \"function\") ? gatewayCallbacks.destroyed : Janus.noop;\n\tif(!Janus.initDone) {\n\t\tgatewayCallbacks.error(\"Library not initialized\");\n\t\treturn {};\n\t}\n\tif(!Janus.isWebrtcSupported()) {\n\t\tgatewayCallbacks.error(\"WebRTC not supported by this browser\");\n\t\treturn {};\n\t}\n\tJanus.log(\"Library initialized: \" + Janus.initDone);\n\tif(!gatewayCallbacks.server) {\n\t\tgatewayCallbacks.error(\"Invalid server url\");\n\t\treturn {};\n\t}\n\tlet websockets = false;\n\tlet ws = null;\n\tlet wsHandlers = {};\n\tlet wsKeepaliveTimeoutId = null;\n\tlet servers = null;\n\tlet serversIndex = 0;\n\tlet server = gatewayCallbacks.server;\n\tif(Janus.isArray(server)) {\n\t\tJanus.log(\"Multiple servers provided (\" + server.length + \"), will use the first that works\");\n\t\tserver = null;\n\t\tservers = gatewayCallbacks.server;\n\t\tJanus.debug(servers);\n\t} else {\n\t\tif(server.indexOf(\"ws\") === 0) {\n\t\t\twebsockets = true;\n\t\t\tJanus.log(\"Using WebSockets to contact Janus: \" + server);\n\t\t} else {\n\t\t\twebsockets = false;\n\t\t\tJanus.log(\"Using REST API to contact Janus: \" + server);\n\t\t}\n\t}\n\tlet iceServers = gatewayCallbacks.iceServers || [{urls: \"stun:stun.l.google.com:19302\"}];\n\tlet iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n\tlet bundlePolicy = gatewayCallbacks.bundlePolicy;\n\t// Whether we should enable the withCredentials flag for XHR requests\n\tlet withCredentials = false;\n\tif(typeof gatewayCallbacks.withCredentials !== 'undefined' && gatewayCallbacks.withCredentials !== null)\n\t\twithCredentials = gatewayCallbacks.withCredentials === true;\n\t// Optional max events\n\tlet maxev = 10;\n\tif(typeof gatewayCallbacks.max_poll_events !== 'undefined' && gatewayCallbacks.max_poll_events !== null)\n\t\tmaxev = gatewayCallbacks.max_poll_events;\n\tif(maxev < 1)\n\t\tmaxev = 1;\n\t// Token to use (only if the token based authentication mechanism is enabled)\n\tlet token = null;\n\tif(typeof gatewayCallbacks.token !== 'undefined' && gatewayCallbacks.token !== null)\n\t\ttoken = gatewayCallbacks.token;\n\t// API secret to use (only if the shared API secret is enabled)\n\tlet apisecret = null;\n\tif(typeof gatewayCallbacks.apisecret !== 'undefined' && gatewayCallbacks.apisecret !== null)\n\t\tapisecret = gatewayCallbacks.apisecret;\n\t// Whether we should destroy this session when onbeforeunload is called\n\tthis.destroyOnUnload = true;\n\tif(typeof gatewayCallbacks.destroyOnUnload !== 'undefined' && gatewayCallbacks.destroyOnUnload !== null)\n\t\tthis.destroyOnUnload = (gatewayCallbacks.destroyOnUnload === true);\n\t// Some timeout-related values\n\tlet keepAlivePeriod = 25000;\n\tif(typeof gatewayCallbacks.keepAlivePeriod !== 'undefined' && gatewayCallbacks.keepAlivePeriod !== null)\n\t\tkeepAlivePeriod = gatewayCallbacks.keepAlivePeriod;\n\tif(isNaN(keepAlivePeriod))\n\t\tkeepAlivePeriod = 25000;\n\tlet longPollTimeout = 60000;\n\tif(typeof gatewayCallbacks.longPollTimeout !== 'undefined' && gatewayCallbacks.longPollTimeout !== null)\n\t\tlongPollTimeout = gatewayCallbacks.longPollTimeout;\n\tif(isNaN(longPollTimeout))\n\t\tlongPollTimeout = 60000;\n\n\t// overrides for default maxBitrate values for simulcasting\n\tfunction getMaxBitrates(simulcastMaxBitrates) {\n\t\tlet maxBitrates = {\n\t\t\thigh: 900000,\n\t\t\tmedium: 300000,\n\t\t\tlow: 100000,\n\t\t};\n\n\t\tif(typeof simulcastMaxBitrates !== 'undefined' && simulcastMaxBitrates !== null) {\n\t\t\tif(simulcastMaxBitrates.high)\n\t\t\t\tmaxBitrates.high = simulcastMaxBitrates.high;\n\t\t\tif(simulcastMaxBitrates.medium)\n\t\t\t\tmaxBitrates.medium = simulcastMaxBitrates.medium;\n\t\t\tif(simulcastMaxBitrates.low)\n\t\t\t\tmaxBitrates.low = simulcastMaxBitrates.low;\n\t\t}\n\n\t\treturn maxBitrates;\n\t}\n\n\tlet connected = false;\n\tlet sessionId = null;\n\tlet pluginHandles = new Map();\n\tlet that = this;\n\tlet retries = 0;\n\tlet transactions = new Map();\n\tcreateSession(gatewayCallbacks);\n\n\t// Public methods\n\tthis.getServer = function() { return server; };\n\tthis.isConnected = function() { return connected; };\n\tthis.reconnect = function(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks[\"reconnect\"] = true;\n\t\tcreateSession(callbacks);\n\t};\n\tthis.getSessionId = function() { return sessionId; };\n\tthis.getInfo = function(callbacks) { getInfo(callbacks); };\n\tthis.destroy = function(callbacks) { destroySession(callbacks); };\n\tthis.attach = function(callbacks) { createHandle(callbacks); };\n\n\tfunction eventHandler() {\n\t\tif(sessionId == null)\n\t\t\treturn;\n\t\tJanus.debug('Long poll...');\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tlet longpoll = server + \"/\" + sessionId + \"?rid=\" + new Date().getTime();\n\t\tif(maxev)\n\t\t\tlongpoll = longpoll + \"&maxev=\" + maxev;\n\t\tif(token)\n\t\t\tlongpoll = longpoll + \"&token=\" + encodeURIComponent(token);\n\t\tif(apisecret)\n\t\t\tlongpoll = longpoll + \"&apisecret=\" + encodeURIComponent(apisecret);\n\t\tJanus.httpAPICall(longpoll, {\n\t\t\tverb: 'GET',\n\t\t\twithCredentials: withCredentials,\n\t\t\tsuccess: handleEvent,\n\t\t\ttimeout: longPollTimeout,\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\n\t\t\t\tretries++;\n\t\t\t\tif(retries > 3) {\n\t\t\t\t\t// Did we just lose the server? :-(\n\t\t\t\t\tconnected = false;\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teventHandler();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private event handler: this will trigger plugin callbacks, if set\n\tfunction handleEvent(json, skipTimeout) {\n\t\tretries = 0;\n\t\tif(!websockets && typeof sessionId !== 'undefined' && sessionId !== null && skipTimeout !== true)\n\t\t\teventHandler();\n\t\tif(!websockets && Janus.isArray(json)) {\n\t\t\t// We got an array: it means we passed a maxev > 1, iterate on all objects\n\t\t\tfor(let i=0; i<json.length; i++) {\n\t\t\t\thandleEvent(json[i], true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(json[\"janus\"] === \"keepalive\") {\n\t\t\t// Nothing happened\n\t\t\tJanus.vdebug(\"Got a keepalive on session \" + sessionId);\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"server_info\") {\n\t\t\t// Just info on the Janus instance\n\t\t\tJanus.debug(\"Got info on the Janus instance\");\n\t\t\tJanus.debug(json);\n\t\t\tconst transaction = json[\"transaction\"];\n\t\t\tif(transaction) {\n\t\t\t\tconst reportSuccess = transactions.get(transaction);\n\t\t\t\tif(reportSuccess)\n\t\t\t\t\treportSuccess(json);\n\t\t\t\ttransactions.delete(transaction);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"ack\") {\n\t\t\t// Just an ack, we can probably ignore\n\t\t\tJanus.debug(\"Got an ack on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst transaction = json[\"transaction\"];\n\t\t\tif(transaction) {\n\t\t\t\tconst reportSuccess = transactions.get(transaction);\n\t\t\t\tif(reportSuccess)\n\t\t\t\t\treportSuccess(json);\n\t\t\t\ttransactions.delete(transaction);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"success\") {\n\t\t\t// Success!\n\t\t\tJanus.debug(\"Got a success on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst transaction = json[\"transaction\"];\n\t\t\tif(transaction) {\n\t\t\t\tconst reportSuccess = transactions.get(transaction);\n\t\t\t\tif(reportSuccess)\n\t\t\t\t\treportSuccess(json);\n\t\t\t\ttransactions.delete(transaction);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"trickle\") {\n\t\t\t// We got a trickle candidate from Janus\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet candidate = json[\"candidate\"];\n\t\t\tJanus.debug(\"Got a trickled candidate on session \" + sessionId);\n\t\t\tJanus.debug(candidate);\n\t\t\tlet config = pluginHandle.webrtcStuff;\n\t\t\tif(config.pc && config.remoteSdp) {\n\t\t\t\t// Add candidate right now\n\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\tif(!candidate || candidate.completed === true) {\n\t\t\t\t\t// end-of-candidates\n\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t} else {\n\t\t\t\t\t// New candidate\n\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We didn't do setRemoteDescription (trickle got here before the offer?)\n\t\t\t\tJanus.debug(\"We didn't do setRemoteDescription (trickle got here before the offer?), caching candidate\");\n\t\t\t\tif(!config.candidates)\n\t\t\t\t\tconfig.candidates = [];\n\t\t\t\tconfig.candidates.push(candidate);\n\t\t\t\tJanus.debug(config.candidates);\n\t\t\t}\n\t\t} else if(json[\"janus\"] === \"webrtcup\") {\n\t\t\t// The PeerConnection with the server is up! Notify this\n\t\t\tJanus.debug(\"Got a webrtcup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(true);\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"hangup\") {\n\t\t\t// A plugin asked the core to hangup a PeerConnection on one of our handles\n\t\t\tJanus.debug(\"Got a hangup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(false, json[\"reason\"]);\n\t\t\tpluginHandle.hangup();\n\t\t} else if(json[\"janus\"] === \"detached\") {\n\t\t\t// A plugin asked the core to detach one of our handles\n\t\t\tJanus.debug(\"Got a detached event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\t// Don't warn here because destroyHandle causes this situation.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.ondetached();\n\t\t\tpluginHandle.detach();\n\t\t} else if(json[\"janus\"] === \"media\") {\n\t\t\t// Media started/stopped flowing\n\t\t\tJanus.debug(\"Got a media event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.mediaState(json[\"type\"], json[\"receiving\"], json[\"mid\"]);\n\t\t} else if(json[\"janus\"] === \"slowlink\") {\n\t\t\tJanus.debug(\"Got a slowlink event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\t// Trouble uplink or downlink\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.slowLink(json[\"uplink\"], json[\"lost\"], json[\"mid\"]);\n\t\t} else if(json[\"janus\"] === \"error\") {\n\t\t\t// Oops, something wrong happened\n\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\tJanus.debug(json);\n\t\t\tlet transaction = json[\"transaction\"];\n\t\t\tif(transaction) {\n\t\t\t\tlet reportSuccess = transactions.get(transaction);\n\t\t\t\tif(reportSuccess) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\ttransactions.delete(transaction);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"event\") {\n\t\t\tJanus.debug(\"Got a plugin event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tconst sender = json[\"sender\"];\n\t\t\tif(!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet plugindata = json[\"plugindata\"];\n\t\t\tif(!plugindata) {\n\t\t\t\tJanus.warn(\"Missing plugindata...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tJanus.debug(\"  -- Event is coming from \" + sender + \" (\" + plugindata[\"plugin\"] + \")\");\n\t\t\tlet data = plugindata[\"data\"];\n\t\t\tJanus.debug(data);\n\t\t\tconst pluginHandle = pluginHandles.get(sender);\n\t\t\tif(!pluginHandle) {\n\t\t\t\tJanus.warn(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet jsep = json[\"jsep\"];\n\t\t\tif(jsep) {\n\t\t\t\tJanus.debug(\"Handling SDP as well...\");\n\t\t\t\tJanus.debug(jsep);\n\t\t\t}\n\t\t\tlet callback = pluginHandle.onmessage;\n\t\t\tif(callback) {\n\t\t\t\tJanus.debug(\"Notifying application...\");\n\t\t\t\t// Send to callback specified when attaching plugin handle\n\t\t\t\tcallback(data, jsep);\n\t\t\t} else {\n\t\t\t\t// Send to generic callback (?)\n\t\t\t\tJanus.debug(\"No provided notification callback\");\n\t\t\t}\n\t\t} else if(json[\"janus\"] === \"timeout\") {\n\t\t\tJanus.error(\"Timeout on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tif(websockets) {\n\t\t\t\tws.close(3504, \"Gateway timeout\");\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tJanus.warn(\"Unknown message/event  '\" + json[\"janus\"] + \"' on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t}\n\t}\n\n\t// Private helper to send keep-alive messages on WebSockets\n\tfunction keepAlive() {\n\t\tif(!server || !websockets || !connected)\n\t\t\treturn;\n\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n\t\tlet request = { \"janus\": \"keepalive\", \"session_id\": sessionId, \"transaction\": Janus.randomString(12) };\n\t\tif(token)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tws.send(JSON.stringify(request));\n\t}\n\n\t// Private method to create a session\n\tfunction createSession(callbacks) {\n\t\tlet transaction = Janus.randomString(12);\n\t\tlet request = { \"janus\": \"create\", \"transaction\": transaction };\n\t\tif(callbacks[\"reconnect\"]) {\n\t\t\t// We're reconnecting, claim the session\n\t\t\tconnected = false;\n\t\t\trequest[\"janus\"] = \"claim\";\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t// If we were using websockets, ignore the old connection\n\t\t\tif(ws) {\n\t\t\t\tws.onopen = null;\n\t\t\t\tws.onerror = null;\n\t\t\t\tws.onclose = null;\n\t\t\t\tif(wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t\twsKeepaliveTimeoutId = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(token)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(!server && Janus.isArray(servers)) {\n\t\t\t// We still need to find a working server from the list we were given\n\t\t\tserver = servers[serversIndex];\n\t\t\tif(server.indexOf(\"ws\") === 0) {\n\t\t\t\twebsockets = true;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex+1) + \": trying WebSockets to contact Janus (\" + server + \")\");\n\t\t\t} else {\n\t\t\t\twebsockets = false;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex+1) + \": trying REST API to contact Janus (\" + server + \")\");\n\t\t\t}\n\t\t}\n\t\tif(websockets) {\n\t\t\tws = Janus.newWebSocket(server, 'janus-protocol');\n\t\t\twsHandlers = {\n\t\t\t\t'error': function() {\n\t\t\t\t\tJanus.error(\"Error connecting to the Janus WebSockets server... \" + server);\n\t\t\t\t\tif(Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n\t\t\t\t\t\tserversIndex++;\n\t\t\t\t\t\tif(serversIndex === servers.length) {\n\t\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Let's try the next server\n\t\t\t\t\t\tserver = null;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tcreateSession(callbacks);\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbacks.error(\"Error connecting to the Janus WebSockets server: Is the server down?\");\n\t\t\t\t},\n\n\t\t\t\t'open': function() {\n\t\t\t\t\t// We need to be notified about the success\n\t\t\t\t\ttransactions.set(transaction, function(json) {\n\t\t\t\t\t\tJanus.debug(json);\n\t\t\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\tsessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\t\t\t\t\t\tif(callbacks[\"reconnect\"]) {\n\t\t\t\t\t\t\tJanus.log(\"Claimed session: \" + sessionId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.sessions.set(sessionId, that);\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t});\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t},\n\n\t\t\t\t'message': function(event) {\n\t\t\t\t\thandleEvent(JSON.parse(event.data));\n\t\t\t\t},\n\n\t\t\t\t'close': function() {\n\t\t\t\t\tif(!server || !connected) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconnected = false;\n\t\t\t\t\t// FIXME What if this is called when the page is closed?\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor(let eventName in wsHandlers) {\n\t\t\t\tws.addEventListener(eventName, wsHandlers[eventName]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconnected = true;\n\t\t\t\tsessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\t\t\t\tif(callbacks[\"reconnect\"]) {\n\t\t\t\t\tJanus.log(\"Claimed session: \" + sessionId);\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t}\n\t\t\t\tJanus.sessions.set(sessionId, that);\n\t\t\t\teventHandler();\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif(Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n\t\t\t\t\tserversIndex++;\n\t\t\t\t\tif(serversIndex === servers.length) {\n\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Let's try the next server\n\t\t\t\t\tserver = null;\n\t\t\t\t\tsetTimeout(function() { createSession(callbacks); }, 200);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse if(errorThrown && errorThrown.error)\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown.error.message);\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to get info on the server\n\tfunction getInfo(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\t// FIXME This method triggers a success even when we fail\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tJanus.log(\"Getting info on Janus instance\");\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\t// We just need to send an \"info\" request\n\t\tlet transaction = Janus.randomString(12);\n\t\tlet request = { \"janus\": \"info\", \"transaction\": transaction };\n\t\tif(token)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\ttransactions.set(transaction, function(json) {\n\t\t\t\tJanus.log(\"Server info:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"server_info\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success(json);\n\t\t\t});\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Server info:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"server_info\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success(json);\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif(errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to destroy a session\n\tfunction destroySession(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\t// FIXME This method triggers a success even when we fail\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tlet unload = (callbacks.unload === true);\n\t\tlet notifyDestroyed = true;\n\t\tif(typeof callbacks.notifyDestroyed !== 'undefined' && callbacks.notifyDestroyed !== null)\n\t\t\tnotifyDestroyed = (callbacks.notifyDestroyed === true);\n\t\tlet cleanupHandles = (callbacks.cleanupHandles === true);\n\t\tJanus.log(\"Destroying session \" + sessionId + \" (unload=\" + unload + \")\");\n\t\tif(!sessionId) {\n\t\t\tJanus.warn(\"No session to destroy\");\n\t\t\tcallbacks.success();\n\t\t\tif(notifyDestroyed)\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\treturn;\n\t\t}\n\t\tif(cleanupHandles) {\n\t\t\tfor(const handleId of pluginHandles.keys())\n\t\t\t\tdestroyHandle(handleId, { noRequest: true });\n\t\t}\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tsessionId = null;\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\t// No need to destroy all handles first, Janus will do that itself\n\t\tlet request = { \"janus\": \"destroy\", \"transaction\": Janus.randomString(12) };\n\t\tif(token)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(unload) {\n\t\t\t// We're unloading the page: use sendBeacon for HTTP instead,\n\t\t\t// or just close the WebSocket connection if we're using that\n\t\t\tif(websockets) {\n\t\t\t\tws.onclose = null;\n\t\t\t\tws.close();\n\t\t\t\tws = null;\n\t\t\t} else {\n\t\t\t\tnavigator.sendBeacon(server + \"/\" + sessionId, JSON.stringify(request));\n\t\t\t}\n\t\t\tJanus.log(\"Destroyed session:\");\n\t\t\tsessionId = null;\n\t\t\tconnected = false;\n\t\t\tcallbacks.success();\n\t\t\tif(notifyDestroyed)\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\treturn;\n\t\t}\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\n\t\t\tlet unbindWebSocket = function() {\n\t\t\t\tfor(let eventName in wsHandlers) {\n\t\t\t\t\tws.removeEventListener(eventName, wsHandlers[eventName]);\n\t\t\t\t}\n\t\t\t\tws.removeEventListener('message', onUnbindMessage);\n\t\t\t\tws.removeEventListener('error', onUnbindError);\n\t\t\t\tif(wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t}\n\t\t\t\tws.close();\n\t\t\t};\n\n\t\t\tlet onUnbindMessage = function(event){\n\t\t\t\tlet data = JSON.parse(event.data);\n\t\t\t\tif(data.session_id == request.session_id && data.transaction == request.transaction) {\n\t\t\t\t\tunbindWebSocket();\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet onUnbindError = function() {\n\t\t\t\tunbindWebSocket();\n\t\t\t\tcallbacks.error(\"Failed to destroy the server: Is the server down?\");\n\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t};\n\n\t\t\tws.addEventListener('message', onUnbindMessage);\n\t\t\tws.addEventListener('error', onUnbindError);\n\n\t\t\tif(ws.readyState === 1) {\n\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t} else {\n\t\t\t\tonUnbindError();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Destroyed session:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success();\n\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\t// Reset everything anyway\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tcallbacks.success();\n\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a plugin handle\n\tfunction createHandle(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.dataChannelOptions = callbacks.dataChannelOptions || { ordered: true };\n\t\tcallbacks.consentDialog = (typeof callbacks.consentDialog == \"function\") ? callbacks.consentDialog : Janus.noop;\n\t\tcallbacks.iceState = (typeof callbacks.iceState == \"function\") ? callbacks.iceState : Janus.noop;\n\t\tcallbacks.mediaState = (typeof callbacks.mediaState == \"function\") ? callbacks.mediaState : Janus.noop;\n\t\tcallbacks.webrtcState = (typeof callbacks.webrtcState == \"function\") ? callbacks.webrtcState : Janus.noop;\n\t\tcallbacks.slowLink = (typeof callbacks.slowLink == \"function\") ? callbacks.slowLink : Janus.noop;\n\t\tcallbacks.onmessage = (typeof callbacks.onmessage == \"function\") ? callbacks.onmessage : Janus.noop;\n\t\tcallbacks.onlocaltrack = (typeof callbacks.onlocaltrack == \"function\") ? callbacks.onlocaltrack : Janus.noop;\n\t\tcallbacks.onremotetrack = (typeof callbacks.onremotetrack == \"function\") ? callbacks.onremotetrack : Janus.noop;\n\t\tcallbacks.ondata = (typeof callbacks.ondata == \"function\") ? callbacks.ondata : Janus.noop;\n\t\tcallbacks.ondataopen = (typeof callbacks.ondataopen == \"function\") ? callbacks.ondataopen : Janus.noop;\n\t\tcallbacks.oncleanup = (typeof callbacks.oncleanup == \"function\") ? callbacks.oncleanup : Janus.noop;\n\t\tcallbacks.ondetached = (typeof callbacks.ondetached == \"function\") ? callbacks.ondetached : Janus.noop;\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tlet plugin = callbacks.plugin;\n\t\tif(!plugin) {\n\t\t\tJanus.error(\"Invalid plugin\");\n\t\t\tcallbacks.error(\"Invalid plugin\");\n\t\t\treturn;\n\t\t}\n\t\tlet opaqueId = callbacks.opaqueId;\n\t\tlet loopIndex = callbacks.loopIndex;\n\t\tlet handleToken = callbacks.token ? callbacks.token : token;\n\t\tlet transaction = Janus.randomString(12);\n\t\tlet request = { \"janus\": \"attach\", \"plugin\": plugin, \"opaque_id\": opaqueId, \"loop_index\": loopIndex, \"transaction\": transaction };\n\t\tif(handleToken)\n\t\t\trequest[\"token\"] = handleToken;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\ttransactions.set(transaction, function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tlet pluginHandle =\n\t\t\t\t\t{\n\t\t\t\t\t\tsession : that,\n\t\t\t\t\t\tplugin : plugin,\n\t\t\t\t\t\tid : handleId,\n\t\t\t\t\t\ttoken : handleToken,\n\t\t\t\t\t\tdetached : false,\n\t\t\t\t\t\twebrtcStuff : {\n\t\t\t\t\t\t\tstarted : false,\n\t\t\t\t\t\t\tmyStream : null,\n\t\t\t\t\t\t\tstreamExternal : false,\n\t\t\t\t\t\t\tmySdp : null,\n\t\t\t\t\t\t\tmediaConstraints : null,\n\t\t\t\t\t\t\tpc : null,\n\t\t\t\t\t\t\tdataChannelOptions: callbacks.dataChannelOptions,\n\t\t\t\t\t\t\tdataChannel : {},\n\t\t\t\t\t\t\tdtmfSender : null,\n\t\t\t\t\t\t\ttrickle : true,\n\t\t\t\t\t\t\ticeDone : false,\n\t\t\t\t\t\t\tbitrate : {}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetId : function() { return handleId; },\n\t\t\t\t\t\tgetPlugin : function() { return plugin; },\n\t\t\t\t\t\tgetVolume : function(mid, result) { return getVolume(handleId, mid, true, result); },\n\t\t\t\t\t\tgetRemoteVolume : function(mid, result) { return getVolume(handleId, mid, true, result); },\n\t\t\t\t\t\tgetLocalVolume : function(mid, result) { return getVolume(handleId, mid, false, result); },\n\t\t\t\t\t\tisAudioMuted : function(mid) { return isMuted(handleId, mid, false); },\n\t\t\t\t\t\tmuteAudio : function(mid) { return mute(handleId, mid, false, true); },\n\t\t\t\t\t\tunmuteAudio : function(mid) { return mute(handleId, mid, false, false); },\n\t\t\t\t\t\tisVideoMuted : function(mid) { return isMuted(handleId, mid, true); },\n\t\t\t\t\t\tmuteVideo : function(mid) { return mute(handleId, mid, true, true); },\n\t\t\t\t\t\tunmuteVideo : function(mid) { return mute(handleId, mid, true, false); },\n\t\t\t\t\t\tgetBitrate : function(mid) { return getBitrate(handleId, mid); },\n\t\t\t\t\t\tsetMaxBitrate : function(mid, bitrate) { return setBitrate(handleId, mid, bitrate); },\n\t\t\t\t\t\tsend : function(callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\t\tdata : function(callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\t\tdtmf : function(callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\t\tconsentDialog : callbacks.consentDialog,\n\t\t\t\t\t\ticeState : callbacks.iceState,\n\t\t\t\t\t\tmediaState : callbacks.mediaState,\n\t\t\t\t\t\twebrtcState : callbacks.webrtcState,\n\t\t\t\t\t\tslowLink : callbacks.slowLink,\n\t\t\t\t\t\tonmessage : callbacks.onmessage,\n\t\t\t\t\t\tcreateOffer : function(callbacks) { prepareWebrtc(handleId, true, callbacks); },\n\t\t\t\t\t\tcreateAnswer : function(callbacks) { prepareWebrtc(handleId, false, callbacks); },\n\t\t\t\t\t\thandleRemoteJsep : function(callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\t\treplaceTracks : function(callbacks) { replaceTracks(handleId, callbacks); },\n\t\t\t\t\t\tgetLocalTracks : function() { return getLocalTracks(handleId); },\n\t\t\t\t\t\tgetRemoteTracks : function() { return getRemoteTracks(handleId); },\n\t\t\t\t\t\tonlocaltrack : callbacks.onlocaltrack,\n\t\t\t\t\t\tonremotetrack : callbacks.onremotetrack,\n\t\t\t\t\t\tondata : callbacks.ondata,\n\t\t\t\t\t\tondataopen : callbacks.ondataopen,\n\t\t\t\t\t\toncleanup : callbacks.oncleanup,\n\t\t\t\t\t\tondetached : callbacks.ondetached,\n\t\t\t\t\t\thangup : function(sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\t\tdetach : function(callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t\t};\n\t\t\t\tpluginHandles.set(handleId, pluginHandle);\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t});\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tlet pluginHandle =\n\t\t\t\t\t{\n\t\t\t\t\t\tsession : that,\n\t\t\t\t\t\tplugin : plugin,\n\t\t\t\t\t\tid : handleId,\n\t\t\t\t\t\ttoken : handleToken,\n\t\t\t\t\t\tdetached : false,\n\t\t\t\t\t\twebrtcStuff : {\n\t\t\t\t\t\t\tstarted : false,\n\t\t\t\t\t\t\tmyStream : null,\n\t\t\t\t\t\t\tstreamExternal : false,\n\t\t\t\t\t\t\tmySdp : null,\n\t\t\t\t\t\t\tmediaConstraints : null,\n\t\t\t\t\t\t\tpc : null,\n\t\t\t\t\t\t\tdataChannelOptions: callbacks.dataChannelOptions,\n\t\t\t\t\t\t\tdataChannel : {},\n\t\t\t\t\t\t\tdtmfSender : null,\n\t\t\t\t\t\t\ttrickle : true,\n\t\t\t\t\t\t\ticeDone : false,\n\t\t\t\t\t\t\tbitrate: {}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetId : function() { return handleId; },\n\t\t\t\t\t\tgetPlugin : function() { return plugin; },\n\t\t\t\t\t\tgetVolume : function(mid, result) { return getVolume(handleId, mid, true, result); },\n\t\t\t\t\t\tgetRemoteVolume : function(mid, result) { return getVolume(handleId, mid, true, result); },\n\t\t\t\t\t\tgetLocalVolume : function(mid, result) { return getVolume(handleId, mid, false, result); },\n\t\t\t\t\t\tisAudioMuted : function(mid) { return isMuted(handleId, mid, false); },\n\t\t\t\t\t\tmuteAudio : function(mid) { return mute(handleId, mid, false, true); },\n\t\t\t\t\t\tunmuteAudio : function(mid) { return mute(handleId, mid, false, false); },\n\t\t\t\t\t\tisVideoMuted : function(mid) { return isMuted(handleId, mid, true); },\n\t\t\t\t\t\tmuteVideo : function(mid) { return mute(handleId, mid, true, true); },\n\t\t\t\t\t\tunmuteVideo : function(mid) { return mute(handleId, mid, true, false); },\n\t\t\t\t\t\tgetBitrate : function(mid) { return getBitrate(handleId, mid); },\n\t\t\t\t\t\tsetMaxBitrate : function(mid, bitrate) { return setBitrate(handleId, mid, bitrate); },\n\t\t\t\t\t\tsend : function(callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\t\tdata : function(callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\t\tdtmf : function(callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\t\tconsentDialog : callbacks.consentDialog,\n\t\t\t\t\t\ticeState : callbacks.iceState,\n\t\t\t\t\t\tmediaState : callbacks.mediaState,\n\t\t\t\t\t\twebrtcState : callbacks.webrtcState,\n\t\t\t\t\t\tslowLink : callbacks.slowLink,\n\t\t\t\t\t\tonmessage : callbacks.onmessage,\n\t\t\t\t\t\tcreateOffer : function(callbacks) { prepareWebrtc(handleId, true, callbacks); },\n\t\t\t\t\t\tcreateAnswer : function(callbacks) { prepareWebrtc(handleId, false, callbacks); },\n\t\t\t\t\t\thandleRemoteJsep : function(callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\t\treplaceTracks : function(callbacks) { replaceTracks(handleId, callbacks); },\n\t\t\t\t\t\tgetLocalTracks : function() { return getLocalTracks(handleId); },\n\t\t\t\t\t\tgetRemoteTracks : function() { return getRemoteTracks(handleId); },\n\t\t\t\t\t\tonlocaltrack : callbacks.onlocaltrack,\n\t\t\t\t\t\tonremotetrack : callbacks.onremotetrack,\n\t\t\t\t\t\tondata : callbacks.ondata,\n\t\t\t\t\t\tondataopen : callbacks.ondataopen,\n\t\t\t\t\t\toncleanup : callbacks.oncleanup,\n\t\t\t\t\t\tondetached : callbacks.ondetached,\n\t\t\t\t\t\thangup : function(sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\t\tdetach : function(callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t\t};\n\t\t\t\tpluginHandles.set(handleId, pluginHandle);\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif(errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a message\n\tfunction sendMessage(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet message = callbacks.message;\n\t\tlet jsep = callbacks.jsep;\n\t\tlet transaction = Janus.randomString(12);\n\t\tlet request = { \"janus\": \"message\", \"body\": message, \"transaction\": transaction };\n\t\tif(pluginHandle.token)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(jsep) {\n\t\t\trequest.jsep = {\n\t\t\t\ttype: jsep.type,\n\t\t\t\tsdp: jsep.sdp\n\t\t\t};\n\t\t\tif(jsep.e2ee)\n\t\t\t\trequest.jsep.e2ee = true;\n\t\t\tif(jsep.rid_order === \"hml\" || jsep.rid_order === \"lmh\")\n\t\t\t\trequest.jsep.rid_order = jsep.rid_order;\n\t\t\tif(jsep.force_relay)\n\t\t\t\trequest.jsep.force_relay = true;\n\t\t\t// Check if there's SVC video streams to tell Janus about\n\t\t\tlet svc = null;\n\t\t\tlet config = pluginHandle.webrtcStuff;\n\t\t\tif(config.pc) {\n\t\t\t\tlet transceivers = config.pc.getTransceivers();\n\t\t\t\tif(transceivers && transceivers.length > 0) {\n\t\t\t\t\tfor(let mindex in transceivers) {\n\t\t\t\t\t\tlet tr = transceivers[mindex];\n\t\t\t\t\t\tif(tr && tr.sender && tr.sender.track && tr.sender.track.kind === 'video') {\n\t\t\t\t\t\t\tlet params = tr.sender.getParameters();\n\t\t\t\t\t\t\tif(params && params.encodings && params.encodings[0] &&\n\t\t\t\t\t\t\t\t\tparams.encodings[0].scalabilityMode) {\n\t\t\t\t\t\t\t\t// This video stream uses SVC\n\t\t\t\t\t\t\t\tif(!svc)\n\t\t\t\t\t\t\t\t\tsvc = [];\n\t\t\t\t\t\t\t\tsvc.push({\n\t\t\t\t\t\t\t\t\tmindex: parseInt(mindex),\n\t\t\t\t\t\t\t\t\tmid: tr.mid,\n\t\t\t\t\t\t\t\t\tsvc: params.encodings[0].scalabilityMode\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(svc)\n\t\t\t\trequest.jsep.svc = svc;\n\t\t}\n\t\tJanus.debug(\"Sending message to plugin (handle=\" + handleId + \"):\");\n\t\tJanus.debug(request);\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\ttransactions.set(transaction, function(json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tlet plugindata = json[\"plugindata\"];\n\t\t\t\t\tif(!plugindata) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tlet data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif(json[\"error\"]) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t});\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tlet plugindata = json[\"plugindata\"];\n\t\t\t\t\tif(!plugindata) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tlet data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif(json[\"error\"]) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a trickle candidate\n\tfunction sendTrickleCandidate(handleId, candidate) {\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet request = { \"janus\": \"trickle\", \"candidate\": candidate, \"transaction\": Janus.randomString(12) };\n\t\tif(pluginHandle.token)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tJanus.vdebug(\"Sending trickle candidate (handle=\" + handleId + \"):\");\n\t\tJanus.vdebug(request);\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.vdebug(\"Candidate sent!\");\n\t\t\t\tJanus.vdebug(json);\n\t\t\t\tif(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a data channel\n\tfunction createDataChannel(handleId, dclabel, dcprotocol, incoming, pendingData) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn;\n\t\t}\n\t\tlet onDataChannelMessage = function(event) {\n\t\t\tJanus.log('Received message on data channel:', event);\n\t\t\tlet label = event.target.label;\n\t\t\tpluginHandle.ondata(event.data, label);\n\t\t};\n\t\tlet onDataChannelStateChange = function(event) {\n\t\t\tJanus.log('Received state change on data channel:', event);\n\t\t\tlet label = event.target.label;\n\t\t\tlet protocol = event.target.protocol;\n\t\t\tlet dcState = config.dataChannel[label] ? config.dataChannel[label].readyState : \"null\";\n\t\t\tJanus.log('State change on <' + label + '> data channel: ' + dcState);\n\t\t\tif(dcState === 'open') {\n\t\t\t\t// Any pending messages to send?\n\t\t\t\tif(config.dataChannel[label].pending && config.dataChannel[label].pending.length > 0) {\n\t\t\t\t\tJanus.log(\"Sending pending messages on <\" + label + \">:\", config.dataChannel[label].pending.length);\n\t\t\t\t\tfor(let data of config.dataChannel[label].pending) {\n\t\t\t\t\t\tJanus.log(\"Sending data on data channel <\" + label + \">\");\n\t\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\t\tconfig.dataChannel[label].send(data);\n\t\t\t\t\t}\n\t\t\t\t\tconfig.dataChannel[label].pending = [];\n\t\t\t\t}\n\t\t\t\t// Notify the open data channel\n\t\t\t\tpluginHandle.ondataopen(label, protocol);\n\t\t\t}\n\t\t};\n\t\tlet onDataChannelError = function(error) {\n\t\t\tJanus.error('Got error on data channel:', error);\n\t\t\t// TODO\n\t\t};\n\t\tif(!incoming) {\n\t\t\t// FIXME Add options (ordered, maxRetransmits, etc.)\n\t\t\tlet dcoptions = config.dataChannelOptions;\n\t\t\tif(dcprotocol)\n\t\t\t\tdcoptions.protocol = dcprotocol;\n\t\t\tconfig.dataChannel[dclabel] = config.pc.createDataChannel(dclabel, dcoptions);\n\t\t} else {\n\t\t\t// The channel was created by Janus\n\t\t\tconfig.dataChannel[dclabel] = incoming;\n\t\t}\n\t\tconfig.dataChannel[dclabel].onmessage = onDataChannelMessage;\n\t\tconfig.dataChannel[dclabel].onopen = onDataChannelStateChange;\n\t\tconfig.dataChannel[dclabel].onclose = onDataChannelStateChange;\n\t\tconfig.dataChannel[dclabel].onerror = onDataChannelError;\n\t\tconfig.dataChannel[dclabel].pending = [];\n\t\tif(pendingData)\n\t\t\tconfig.dataChannel[dclabel].pending.push(pendingData);\n\t}\n\n\t// Private method to send a data channel message\n\tfunction sendData(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tlet data = callbacks.text || callbacks.data;\n\t\tif(!data) {\n\t\t\tJanus.warn(\"Invalid data\");\n\t\t\tcallbacks.error(\"Invalid data\");\n\t\t\treturn;\n\t\t}\n\t\tlet label = callbacks.label ? callbacks.label : Janus.dataChanDefaultLabel;\n\t\tif(!config.dataChannel[label]) {\n\t\t\t// Create new data channel and wait for it to open\n\t\t\tcreateDataChannel(handleId, label, callbacks.protocol, false, data, callbacks.protocol);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(config.dataChannel[label].readyState !== \"open\") {\n\t\t\tconfig.dataChannel[label].pending.push(data);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.log(\"Sending data on data channel <\" + label + \">\");\n\t\tJanus.debug(data);\n\t\tconfig.dataChannel[label].send(data);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to send a DTMF tone\n\tfunction sendDtmf(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.dtmfSender) {\n\t\t\t// Create the DTMF sender the proper way, if possible\n\t\t\tif(config.pc) {\n\t\t\t\tlet senders = config.pc.getSenders();\n\t\t\t\tlet audioSender = senders.find(function(sender) {\n\t\t\t\t\treturn sender.track && sender.track.kind === 'audio';\n\t\t\t\t});\n\t\t\t\tif(!audioSender) {\n\t\t\t\t\tJanus.warn(\"Invalid DTMF configuration (no audio track)\");\n\t\t\t\t\tcallbacks.error(\"Invalid DTMF configuration (no audio track)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconfig.dtmfSender = audioSender.dtmf;\n\t\t\t\tif(config.dtmfSender) {\n\t\t\t\t\tJanus.log(\"Created DTMF Sender\");\n\t\t\t\t\tconfig.dtmfSender.ontonechange = function(tone) { Janus.debug(\"Sent DTMF tone: \" + tone.tone); };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!config.dtmfSender) {\n\t\t\t\tJanus.warn(\"Invalid DTMF configuration\");\n\t\t\t\tcallbacks.error(\"Invalid DTMF configuration\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlet dtmf = callbacks.dtmf;\n\t\tif(!dtmf) {\n\t\t\tJanus.warn(\"Invalid DTMF parameters\");\n\t\t\tcallbacks.error(\"Invalid DTMF parameters\");\n\t\t\treturn;\n\t\t}\n\t\tlet tones = dtmf.tones;\n\t\tif(!tones) {\n\t\t\tJanus.warn(\"Invalid DTMF string\");\n\t\t\tcallbacks.error(\"Invalid DTMF string\");\n\t\t\treturn;\n\t\t}\n\t\tlet duration = (typeof dtmf.duration === 'number') ? dtmf.duration : 500; // We choose 500ms as the default duration for a tone\n\t\tlet gap = (typeof dtmf.gap === 'number') ? dtmf.gap : 50; // We choose 50ms as the default gap between tones\n\t\tJanus.debug(\"Sending DTMF string \" + tones + \" (duration \" + duration + \"ms, gap \" + gap + \"ms)\");\n\t\tconfig.dtmfSender.insertDTMF(tones, duration, gap);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to destroy a plugin handle\n\tfunction destroyHandle(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tlet noRequest = (callbacks.noRequest === true);\n\t\tJanus.log(\"Destroying handle \" + handleId + \" (only-locally=\" + noRequest + \")\");\n\t\tcleanupWebrtc(handleId);\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || pluginHandle.detached) {\n\t\t\t// Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n\t\t\tpluginHandles.delete(handleId);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tpluginHandle.detached = true;\n\t\tif(noRequest) {\n\t\t\t// We're only removing the handle locally\n\t\t\tpluginHandles.delete(handleId);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tlet request = { \"janus\": \"detach\", \"transaction\": Janus.randomString(12) };\n\t\tif(pluginHandle.token)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif(apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\tpluginHandles.delete(handleId);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Destroyed handle:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tpluginHandles.delete(handleId);\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\t// We cleanup anyway\n\t\t\t\tpluginHandles.delete(handleId);\n\t\t\t\tcallbacks.success();\n\t\t\t}\n\t\t});\n\t}\n\n\t// WebRTC stuff\n\t// Helper function to create a new PeerConnection, if we need one\n\tfunction createPeerconnectionIfNeeded(handleId, callbacks) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tthrow \"Invalid handle\";\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(config.pc) {\n\t\t\t// Nothing to do, we have a PeerConnection already\n\t\t\treturn;\n\t\t}\n\t\tlet pc_config = {\n\t\t\ticeServers: iceServers,\n\t\t\ticeTransportPolicy: iceTransportPolicy,\n\t\t\tbundlePolicy: bundlePolicy\n\t\t};\n\t\tpc_config.sdpSemantics = 'unified-plan';\n\t\t// Check if a sender or receiver transform has been provided\n\t\tlet insertableStreams = false;\n\t\tif(callbacks.tracks) {\n\t\t\tfor(let track of callbacks.tracks) {\n\t\t\t\tif(track.transforms && (track.transforms.sender || track.transforms.receiver)) {\n\t\t\t\t\tinsertableStreams = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(callbacks.externalEncryption) {\n\t\t\tinsertableStreams = true;\n\t\t\tconfig.externalEncryption = true;\n\t\t}\n\t\tif(RTCRtpSender && (RTCRtpSender.prototype.createEncodedStreams ||\n\t\t\t\t(RTCRtpSender.prototype.createEncodedAudioStreams &&\n\t\t\t\tRTCRtpSender.prototype.createEncodedVideoStreams)) && insertableStreams) {\n\t\t\tconfig.insertableStreams = true;\n\t\t\tpc_config.forceEncodedAudioInsertableStreams = true;\n\t\t\tpc_config.forceEncodedVideoInsertableStreams = true;\n\t\t\tpc_config.encodedInsertableStreams = true;\n\t\t}\n\t\tJanus.log('Creating PeerConnection');\n\t\tconfig.pc = new RTCPeerConnection(pc_config);\n\t\tJanus.debug(config.pc);\n\t\tif(config.pc.getStats) {\t// FIXME\n\t\t\tconfig.volume = {};\n\t\t\tconfig.bitrate.value = '0 kbits/sec';\n\t\t}\n\t\tJanus.log('Preparing local SDP and gathering candidates (trickle=' + config.trickle + ')');\n\t\tconfig.pc.oniceconnectionstatechange = function() {\n\t\t\tif(config.pc)\n\t\t\t\tpluginHandle.iceState(config.pc.iceConnectionState);\n\t\t};\n\t\tconfig.pc.onicecandidate = function(event) {\n\t\t\tif(!event.candidate || (event.candidate.candidate && event.candidate.candidate.indexOf('endOfCandidates') > 0)) {\n\t\t\t\tJanus.log('End of candidates.');\n\t\t\t\tconfig.iceDone = true;\n\t\t\t\tif(config.trickle === true) {\n\t\t\t\t\t// Notify end of candidates\n\t\t\t\t\tsendTrickleCandidate(handleId, { completed : true });\n\t\t\t\t} else {\n\t\t\t\t\t// No trickle, time to send the complete SDP (including all candidates)\n\t\t\t\t\tsendSDP(handleId, callbacks);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tlet candidate = {\n\t\t\t\t\tcandidate: event.candidate.candidate,\n\t\t\t\t\tsdpMid: event.candidate.sdpMid,\n\t\t\t\t\tsdpMLineIndex: event.candidate.sdpMLineIndex\n\t\t\t\t};\n\t\t\t\tif(config.trickle === true) {\n\t\t\t\t\t// Send candidate\n\t\t\t\t\tsendTrickleCandidate(handleId, candidate);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconfig.pc.ontrack = function(event) {\n\t\t\tJanus.log('Handling Remote Track', event);\n\t\t\tif(!event.streams)\n\t\t\t\treturn;\n\t\t\tif(!event.track)\n\t\t\t\treturn;\n\t\t\t// Notify about the new track event\n\t\t\tlet mid = event.transceiver ? event.transceiver.mid : event.track.id;\n\t\t\ttry {\n\t\t\t\tpluginHandle.onremotetrack(event.track, mid, true, { reason: 'created' });\n\t\t\t} catch(e) {\n\t\t\t\tJanus.error(\"Error calling onremotetrack\", e);\n\t\t\t}\n\t\t\tif(event.track.onended)\n\t\t\t\treturn;\n\t\t\tlet trackMutedTimeoutId = null;\n\t\t\tJanus.log('Adding onended callback to track:', event.track);\n\t\t\tevent.track.onended = function(ev) {\n\t\t\t\tJanus.log('Remote track removed:', ev);\n\t\t\t\tclearTimeout(trackMutedTimeoutId);\n\t\t\t\t// Notify the application\n\t\t\t\tlet transceivers = config.pc ? config.pc.getTransceivers() : null;\n\t\t\t\tlet transceiver = transceivers ? transceivers.find(\n\t\t\t\t\tt => t.receiver.track === ev.target) : null;\n\t\t\t\tlet mid = transceiver ? transceiver.mid : ev.target.id;\n\t\t\t\ttry {\n\t\t\t\t\tpluginHandle.onremotetrack(ev.target, mid, false, { reason: 'ended' });\n\t\t\t\t} catch(e) {\n\t\t\t\t\tJanus.error(\"Error calling onremotetrack on removal\", e);\n\t\t\t\t}\n\t\t\t};\n\t\t\tevent.track.onmute = function(ev) {\n\t\t\t\tJanus.log('Remote track muted:', ev);\n\t\t\t\tif(!trackMutedTimeoutId) {\n\t\t\t\t\ttrackMutedTimeoutId = setTimeout(function() {\n\t\t\t\t\t\tJanus.log('Removing remote track');\n\t\t\t\t\t\t// Notify the application the track is gone\n\t\t\t\t\t\tlet transceivers = config.pc ? config.pc.getTransceivers() : null;\n\t\t\t\t\t\tlet transceiver = transceivers ? transceivers.find(\n\t\t\t\t\t\t\tt => t.receiver.track === ev.target) : null;\n\t\t\t\t\t\tlet mid = transceiver ? transceiver.mid : ev.target.id;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpluginHandle.onremotetrack(ev.target, mid, false, { reason: 'mute' } );\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(\"Error calling onremotetrack on mute\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrackMutedTimeoutId = null;\n\t\t\t\t\t// Chrome seems to raise mute events only at multiples of 834ms;\n\t\t\t\t\t// we set the timeout to three times this value (rounded to 840ms)\n\t\t\t\t\t}, 3 * 840);\n\t\t\t\t}\n\t\t\t};\n\t\t\tevent.track.onunmute = function(ev) {\n\t\t\t\tJanus.log('Remote track flowing again:', ev);\n\t\t\t\tif(trackMutedTimeoutId != null) {\n\t\t\t\t\tclearTimeout(trackMutedTimeoutId);\n\t\t\t\t\ttrackMutedTimeoutId = null;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Notify the application the track is back\n\t\t\t\t\t\tlet transceivers = config.pc ? config.pc.getTransceivers() : null;\n\t\t\t\t\t\tlet transceiver = transceivers ? transceivers.find(\n\t\t\t\t\t\t\tt => t.receiver.track === ev.target) : null;\n\t\t\t\t\t\tlet mid = transceiver ? transceiver.mid : ev.target.id;\n\t\t\t\t\t\tpluginHandle.onremotetrack(ev.target, mid, true, { reason: 'unmute' });\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tJanus.error(\"Error calling onremotetrack on unmute\", e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\n\t// Helper function used when creating either an offer or answer: it\n\t// prepares what needs to be prepared, including creating a new\n\t// PeerConnection (if needed) and updating the tracks configuration,\n\t// before invoking the function to actually generate the offer/answer\n\tasync function prepareWebrtc(handleId, offer, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tlet jsep = callbacks.jsep;\n\t\tif(offer && jsep) {\n\t\t\tJanus.error(\"Provided a JSEP to a createOffer\");\n\t\t\tcallbacks.error(\"Provided a JSEP to a createOffer\");\n\t\t\treturn;\n\t\t} else if(!offer && (!jsep || !jsep.type || !jsep.sdp)) {\n\t\t\tJanus.error(\"A valid JSEP is required for createAnswer\");\n\t\t\tcallbacks.error(\"A valid JSEP is required for createAnswer\");\n\t\t\treturn;\n\t\t}\n\t\t// If the deprecated media was provided instead of tracks, translate it\n\t\tif(callbacks.media && !callbacks.tracks) {\n\t\t\tcallbacks.tracks = Janus.mediaToTracks(callbacks.media);\n\t\t\tif(callbacks.simulcast === true || callbacks.simulcast2 === true || callbacks.svc) {\n\t\t\t\t// Find the video track and add simulcast/SVC info there\n\t\t\t\tfor(let track of callbacks.tracks) {\n\t\t\t\t\tif(track.type === 'video') {\n\t\t\t\t\t\tif(callbacks.simulcast === true || callbacks.simulcast2 === true)\n\t\t\t\t\t\t\ttrack.simulcast = true;\n\t\t\t\t\t\telse if(callbacks.svc)\n\t\t\t\t\t\t\ttrack.svc = callbacks.svc;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tJanus.warn('Deprecated media object passed, use tracks instead. Automatically translated to:', callbacks.tracks);\n\t\t}\n\t\t// Check that callbacks.array is a valid array\n\t\tif(callbacks.tracks && !Array.isArray(callbacks.tracks)) {\n\t\t\tJanus.error(\"Tracks must be an array\");\n\t\t\tcallbacks.error(\"Tracks must be an array\");\n\t\t\treturn;\n\t\t}\n\t\t// Get the plugin handle\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tconfig.trickle = isTrickleEnabled(callbacks.trickle);\n\t\ttry {\n\t\t\t// Create a PeerConnection, if needed\n\t\t\tcreatePeerconnectionIfNeeded(handleId, callbacks);\n\t\t\tif(offer) {\n\t\t\t\t// Capture devices and setup tracks, if needed\n\t\t\t\tawait captureDevices(handleId, callbacks);\n\t\t\t}\n\t\t\t// Create offer or answer now (depending on the context)\n\t\t\tif(!jsep) {\n\t\t\t\tlet offer = await createOffer(handleId, callbacks);\n\t\t\t\tcallbacks.success(offer);\n\t\t\t} else {\n\t\t\t\tawait config.pc.setRemoteDescription(jsep);\n\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\tconfig.remoteSdp = jsep.sdp;\n\t\t\t\t// Any trickle candidate we cached?\n\t\t\t\tif(config.candidates && config.candidates.length > 0) {\n\t\t\t\t\tfor(let i=0; i<config.candidates.length; i++) {\n\t\t\t\t\t\tlet candidate = config.candidates[i];\n\t\t\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\t\t\tif(!candidate || candidate.completed === true) {\n\t\t\t\t\t\t\t// end-of-candidates\n\t\t\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// New candidate\n\t\t\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconfig.candidates = [];\n\t\t\t\t}\n\t\t\t\t// Capture devices and setup tracks, if needed\n\t\t\t\tawait captureDevices(handleId, callbacks);\n\t\t\t\t// Create the answer now\n\t\t\t\tlet answer = await createAnswer(handleId, callbacks);\n\t\t\t\tcallbacks.success(answer);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tJanus.error(err);\n\t\t\tcallbacks.error(err);\n\t\t}\n\t}\n\n\tfunction prepareWebrtcPeer(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tlet jsep = callbacks.jsep;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(jsep) {\n\t\t\tif(!config.pc) {\n\t\t\t\tJanus.warn(\"Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\tcallbacks.error(\"No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallbacks.customizeSdp(jsep);\n\t\t\tconfig.pc.setRemoteDescription(jsep)\n\t\t\t\t.then(function() {\n\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\tconfig.remoteSdp = jsep.sdp;\n\t\t\t\t\t// Any trickle candidate we cached?\n\t\t\t\t\tif(config.candidates && config.candidates.length > 0) {\n\t\t\t\t\t\tfor(let i=0; i<config.candidates.length; i++) {\n\t\t\t\t\t\t\tlet candidate = config.candidates[i];\n\t\t\t\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\t\t\t\tif(!candidate || candidate.completed === true) {\n\t\t\t\t\t\t\t\t// end-of-candidates\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// New candidate\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconfig.candidates = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Done\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t}, callbacks.error);\n\t\t} else {\n\t\t\tcallbacks.error(\"Invalid JSEP\");\n\t\t}\n\t}\n\n\tasync function createOffer(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tthrow \"Invalid handle\";\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \")\");\n\t\t// https://code.google.com/p/webrtc/issues/detail?id=3508\n\t\tlet mediaConstraints = {};\n\t\tlet iceRestart = (callbacks.iceRestart === true);\n\t\t// If we need an ICE restart, set the related constraint\n\t\tif(iceRestart)\n\t\t\tmediaConstraints.iceRestart = true;\n\t\tJanus.debug(mediaConstraints);\n\t\tlet offer = await config.pc.createOffer(mediaConstraints);\n\t\tJanus.debug(offer);\n\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\tlet jsep = {\n\t\t\ttype: 'offer',\n\t\t\tsdp: offer.sdp\n\t\t};\n\t\tcallbacks.customizeSdp(jsep);\n\t\toffer.sdp = jsep.sdp;\n\t\tJanus.log(\"Setting local description\");\n\t\tconfig.mySdp = {\n\t\t\ttype: 'offer',\n\t\t\tsdp: offer.sdp\n\t\t};\n\t\tawait config.pc.setLocalDescription(offer);\n\t\tconfig.mediaConstraints = mediaConstraints;\n\t\tif(!config.iceDone && !config.trickle) {\n\t\t\t// FIXME Don't do anything until we have all candidates\n\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\treturn null;\n\t\t}\n\t\t// If transforms are present, notify Janus that the media is end-to-end encrypted\n\t\tif(config.insertableStreams || config.externalEncryption)\n\t\t\toffer.e2ee = true;\n\t\treturn offer;\n\t}\n\n\tasync function createAnswer(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tthrow \"Invalid handle\";\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \")\");\n\t\tlet answer = await config.pc.createAnswer();\n\t\tJanus.debug(answer);\n\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\tlet jsep = {\n\t\t\ttype: 'answer',\n\t\t\tsdp: answer.sdp\n\t\t};\n\t\tcallbacks.customizeSdp(jsep);\n\t\tanswer.sdp = jsep.sdp;\n\t\tJanus.log(\"Setting local description\");\n\t\tconfig.mySdp = {\n\t\t\ttype: 'answer',\n\t\t\tsdp: answer.sdp\n\t\t};\n\t\tawait config.pc.setLocalDescription(answer);\n\t\tif(!config.iceDone && !config.trickle) {\n\t\t\t// FIXME Don't do anything until we have all candidates\n\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\treturn null;\n\t\t}\n\t\t// If transforms are present, notify Janus that the media is end-to-end encrypted\n\t\tif(config.insertableStreams || config.externalEncryption)\n\t\t\tanswer.e2ee = true;\n\t\treturn answer;\n\t}\n\n\tfunction sendSDP(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle, not sending anything\");\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tJanus.log(\"Sending offer/answer SDP...\");\n\t\tif(!config.mySdp) {\n\t\t\tJanus.warn(\"Local SDP instance is invalid, not sending anything...\");\n\t\t\treturn;\n\t\t}\n\t\tconfig.mySdp = {\n\t\t\ttype: config.pc.localDescription.type,\n\t\t\tsdp: config.pc.localDescription.sdp\n\t\t};\n\t\tif(config.trickle === false)\n\t\t\tconfig.mySdp[\"trickle\"] = false;\n\t\tJanus.debug(callbacks);\n\t\tconfig.sdpSent = true;\n\t\tcallbacks.success(config.mySdp);\n\t}\n\n\tasync function replaceTracks(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == 'function') ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == 'function') ? callbacks.error : Janus.noop;\n\t\t// Check that callbacks.array is a valid array\n\t\tif(callbacks.tracks && !Array.isArray(callbacks.tracks)) {\n\t\t\tJanus.error('Tracks must be an array');\n\t\t\tcallbacks.error('Tracks must be an array');\n\t\t\treturn;\n\t\t}\n\t\t// Add the replace:true if it's missing\n\t\tfor(let track of callbacks.tracks) {\n\t\t\tif(track.add || (!track.replace && !track.remove))\n\t\t\t\ttrack.replace = true;\n\t\t}\n\t\ttry {\n\t\t\tawait captureDevices(handleId, callbacks);\n\t\t\tcallbacks.success();\n\t\t} catch(err) {\n\t\t\tJanus.error(err);\n\t\t\tcallbacks.error(err);\n\t\t}\n\t}\n\n\tasync function captureDevices(handleId, callbacks) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn('Invalid handle, not sending anything');\n\t\t\tthrow 'Invalid handle';\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn('Invalid PeerConnection');\n\t\t\tthrow 'Invalid PeerConnection';\n\t\t}\n\t\tlet tracks = callbacks.tracks;\n\t\tif(!tracks || !Array.isArray(tracks) || tracks.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\t\tlet openedConsentDialog = false;\n\t\t// Check if we can/should group getUserMedia calls\n\t\tlet groups = {};\n\t\tfor(let track of tracks) {\n\t\t\tdelete track.gumGroup;\n\t\t\tif(!track.type || !['audio', 'video'].includes(track.type))\n\t\t\t\tcontinue;\n\t\t\tif(!track.capture || track.capture instanceof MediaStreamTrack)\n\t\t\t\tcontinue;\n\t\t\tlet group = track.group ? track.group : 'default';\n\t\t\tif(!groups[group])\n\t\t\t\tgroups[group] = {};\n\t\t\tif(groups[group][track.type])\n\t\t\t\tcontinue;\n\t\t\ttrack.gumGroup = group;\n\t\t\tgroups[group][track.type] = track;\n\t\t}\n\t\tlet keys = Object.keys(groups);\n\t\tfor(let key of keys) {\n\t\t\tlet group = groups[key];\n\t\t\tif(!group.audio || !group.video) {\n\t\t\t\tif(group.audio)\n\t\t\t\t\tdelete group.audio.gumGroup;\n\t\t\t\tif(group.video)\n\t\t\t\t\tdelete group.video.gumGroup;\n\t\t\t\tdelete groups[key];\n\t\t\t}\n\t\t}\n\t\tlet answer = (callbacks.jsep ? true : false);\n\t\tfor(let track of tracks) {\n\t\t\tif(!track.type) {\n\t\t\t\tJanus.warn('Missing track type:', track);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(track.type === 'data') {\n\t\t\t\t// Easy enough: create a datachannel if we don't have one already\n\t\t\t\tif(config.pc.ondatachannel) {\n\t\t\t\t\tJanus.warn('Data channel exists already, not creating another one');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tJanus.log('Creating default data channel');\n\t\t\t\tcreateDataChannel(handleId, Janus.dataChanDefaultLabel, null, false);\n\t\t\t\tconfig.pc.ondatachannel = function(event) {\n\t\t\t\t\tJanus.log('Data channel created by Janus:', event);\n\t\t\t\t\tcreateDataChannel(handleId, event.channel.label, event.channel.protocol, event.channel);\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif((typeof track.add === 'undefined' || track.add === null) &&\n\t\t\t\t\t(typeof track.remove === 'undefined' || track.remove === null) &&\n\t\t\t\t\t(typeof track.replace === 'undefined' || track.replace === null)) {\n\t\t\t\t// Let's default to 'add'\n\t\t\t\ttrack.add = true;\n\t\t\t}\n\t\t\tif((track.add && track.remove) || (track.add && track.remove && track.replace)) {\n\t\t\t\tJanus.warn('Conflicting actions for track, ignoring:', track);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(track.add && track.replace) {\n\t\t\t\tJanus.warn('Both add and replace provided, falling back to replace:', track);\n\t\t\t\tdelete track.add;\n\t\t\t} else if(track.remove && track.replace) {\n\t\t\t\tJanus.warn('Both remove and replace provided, falling back to remove:', track);\n\t\t\t\tdelete track.replace;\n\t\t\t}\n\t\t\tlet kind = track.type;\n\t\t\tif(track.type === 'screen')\n\t\t\t\tkind = 'video';\t// FIXME\n\t\t\tlet transceiver = null, sender = null;\n\t\t\tif(track.mid) {\n\t\t\t\t// Search by mid\n\t\t\t\ttransceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === track.mid && t.receiver.track.kind === kind));\n\t\t\t} else {\n\t\t\t\t// Find the first track of this type\n\t\t\t\ttransceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.receiver.track.kind === kind));\n\t\t\t}\n\t\t\tif(track.replace || track.remove) {\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"Couldn't find a transceiver for track:\", track);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(!transceiver.sender) {\n\t\t\t\t\tJanus.warn('No sender in the transceiver for track:', track);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsender = transceiver.sender;\n\t\t\t}\n\t\t\tif(answer && !transceiver) {\n\t\t\t\ttransceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.receiver.track.kind === kind));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"Couldn't find a transceiver for track:\", track);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Capture the new track, if we need to\n\t\t\tlet nt = null, trackId = null;\n\t\t\tif(track.remove || track.replace) {\n\t\t\t\tJanus.log('Removing track from PeerConnection', track);\n\t\t\t\ttrackId = sender.track ? sender.track.id : null;\n\t\t\t\tawait sender.replaceTrack(null);\n\t\t\t\t// Get rid of the old track\n\t\t\t\tif(trackId && config.myStream) {\n\t\t\t\t\tlet rt = null;\n\t\t\t\t\tif(kind === 'audio' && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\t\tfor(let t of config.myStream.getAudioTracks()) {\n\t\t\t\t\t\t\tif(t.id === trackId) {\n\t\t\t\t\t\t\t\trt = t;\n\t\t\t\t\t\t\t\tJanus.log('Removing audio track:', rt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(kind === 'video' && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\t\tfor(let t of config.myStream.getVideoTracks()) {\n\t\t\t\t\t\t\tif(t.id === trackId) {\n\t\t\t\t\t\t\t\trt = t;\n\t\t\t\t\t\t\t\tJanus.log('Removing video track:', rt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rt) {\n\t\t\t\t\t\t// Remove the track and notify the application\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconfig.myStream.removeTrack(rt);\n\t\t\t\t\t\t\tpluginHandle.onlocaltrack(rt, false);\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(\"Error calling onlocaltrack on removal for renegotiation\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Close the old track (unless we've been asked not to)\n\t\t\t\t\t\tif(rt.dontStop !== true) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\trt.stop();\n\t\t\t\t\t\t\t} catch(e) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(track.capture) {\n\t\t\t\tif(track.gumGroup && groups[track.gumGroup] && groups[track.gumGroup].stream) {\n\t\t\t\t\t// We did a getUserMedia before already\n\t\t\t\t\tlet stream = groups[track.gumGroup].stream;\n\t\t\t\t\tnt = (track.type === 'audio' ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0]);\n\t\t\t\t\tdelete groups[track.gumGroup].stream;\n\t\t\t\t\tdelete groups[track.gumGroup];\n\t\t\t\t\tdelete track.gumGroup;\n\t\t\t\t} else if(track.capture instanceof MediaStreamTrack) {\n\t\t\t\t\t// An external track was provided, use that\n\t\t\t\t\tnt = track.capture;\n\t\t\t\t} else {\n\t\t\t\t\tif(!openedConsentDialog) {\n\t\t\t\t\t\topenedConsentDialog = true;\n\t\t\t\t\t\tpluginHandle.consentDialog(true);\n\t\t\t\t\t}\n\t\t\t\t\tlet constraints = Janus.trackConstraints(track), stream = null;\n\t\t\t\t\tif(track.type === 'audio' || track.type === 'video') {\n\t\t\t\t\t\t// Use getUserMedia: check if we need to group audio and video together\n\t\t\t\t\t\tif(track.gumGroup) {\n\t\t\t\t\t\t\tlet otherType = (track.type === 'audio' ? 'video' : 'audio');\n\t\t\t\t\t\t\tif(groups[track.gumGroup] && groups[track.gumGroup][otherType]) {\n\t\t\t\t\t\t\t\tlet otherTrack = groups[track.gumGroup][otherType];\n\t\t\t\t\t\t\t\tlet otherConstraints = Janus.trackConstraints(otherTrack);\n\t\t\t\t\t\t\t\tconstraints[otherType] = otherConstraints[otherType];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstream = await navigator.mediaDevices.getUserMedia(constraints);\n\t\t\t\t\t\tif(track.gumGroup && constraints.audio && constraints.video) {\n\t\t\t\t\t\t\t// We just performed a grouped getUserMedia, keep track of the\n\t\t\t\t\t\t\t// stream so that we can immediately assign the track later\n\t\t\t\t\t\t\tgroups[track.gumGroup].stream = stream;\n\t\t\t\t\t\t\tdelete track.gumGroup;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Use getDisplayMedia\n\t\t\t\t\t\tstream = await navigator.mediaDevices.getDisplayMedia(constraints);\n\t\t\t\t\t}\n\t\t\t\t\tnt = (track.type === 'audio' ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0]);\n\t\t\t\t}\n\t\t\t\tif(track.replace) {\n\t\t\t\t\t// Replace the track\n\t\t\t\t\tawait sender.replaceTrack(nt);\n\t\t\t\t\t// Update the transceiver direction\n\t\t\t\t\tlet newDirection = 'sendrecv';\n\t\t\t\t\tif(track.recv === false || transceiver.direction === 'inactive' || transceiver.direction === 'sendonly')\n\t\t\t\t\t\tnewDirection = 'sendonly';\n\t\t\t\t\tif(transceiver.setDirection)\n\t\t\t\t\t\ttransceiver.setDirection(newDirection);\n\t\t\t\t\telse\n\t\t\t\t\t\ttransceiver.direction = newDirection;\n\t\t\t\t} else {\n\t\t\t\t\t// FIXME Add as a new track\n\t\t\t\t\tif(!config.myStream)\n\t\t\t\t\t\tconfig.myStream = new MediaStream();\n\t\t\t\t\tif(kind === 'audio' || (!track.simulcast && !track.svc)) {\n\t\t\t\t\t\tsender = config.pc.addTrack(nt, config.myStream);\n\t\t\t\t\t\ttransceiver = config.pc.getTransceivers()\n\t\t\t\t\t\t\t.find(t => (t.sender === sender));\n\t\t\t\t\t} else if(track.simulcast) {\n\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser !== 'firefox') {\n\t\t\t\t\t\t\t// Standard RID\n\t\t\t\t\t\t\tJanus.log('Enabling rid-based simulcasting:', nt);\n\t\t\t\t\t\t\tlet maxBitrates = getMaxBitrates(track.simulcastMaxBitrates);\n\t\t\t\t\t\t\ttransceiver = config.pc.addTransceiver(nt, {\n\t\t\t\t\t\t\t\tdirection: 'sendrecv',\n\t\t\t\t\t\t\t\tstreams: [config.myStream],\n\t\t\t\t\t\t\t\tsendEncodings: track.sendEncodings || [\n\t\t\t\t\t\t\t\t\t{ rid: 'h', active: true, scalabilityMode: 'L1T2', maxBitrate: maxBitrates.high },\n\t\t\t\t\t\t\t\t\t{ rid: 'm', active: true, scalabilityMode: 'L1T2', maxBitrate: maxBitrates.medium, scaleResolutionDownBy: 2 },\n\t\t\t\t\t\t\t\t\t{ rid: 'l', active: true, scalabilityMode: 'L1T2', maxBitrate: maxBitrates.low, scaleResolutionDownBy: 4 }\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Firefox-based RID, based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\t\t\t\t\tJanus.log('Enabling Simulcasting for Firefox (RID)');\n\t\t\t\t\t\t\ttransceiver = config.pc.addTransceiver(nt, {\n\t\t\t\t\t\t\t\tdirection: 'sendrecv',\n\t\t\t\t\t\t\t\tstreams: [config.myStream]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsender = transceiver ? transceiver.sender : null;\n\t\t\t\t\t\t\tif(sender) {\n\t\t\t\t\t\t\t\tlet parameters = sender.getParameters();\n\t\t\t\t\t\t\t\tif(!parameters)\n\t\t\t\t\t\t\t\t\tparameters = {};\n\t\t\t\t\t\t\t\tlet maxBitrates = getMaxBitrates(track.simulcastMaxBitrates);\n\t\t\t\t\t\t\t\tparameters.encodings = track.sendEncodings || [\n\t\t\t\t\t\t\t\t\t{ rid: 'h', active: true, maxBitrate: maxBitrates.high },\n\t\t\t\t\t\t\t\t\t{ rid: 'm', active: true, maxBitrate: maxBitrates.medium, scaleResolutionDownBy: 2 },\n\t\t\t\t\t\t\t\t\t{ rid: 'l', active: true, maxBitrate: maxBitrates.low, scaleResolutionDownBy: 4 }\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tsender.setParameters(parameters);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.log('Enabling SVC (' + track.svc + '):', nt);\n\t\t\t\t\t\ttransceiver = config.pc.addTransceiver(nt, {\n\t\t\t\t\t\t\tdirection: 'sendrecv',\n\t\t\t\t\t\t\tstreams: [config.myStream],\n\t\t\t\t\t\t\tsendEncodings: [\n\t\t\t\t\t\t\t\t{ scalabilityMode: track.svc }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif(!sender)\n\t\t\t\t\t\tsender = transceiver ? transceiver.sender : null;\n\t\t\t\t\t// Check if we need to override some settings\n\t\t\t\t\tif(track.codec) {\n\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n\t\t\t\t\t\t\tJanus.warn('setCodecPreferences not supported in Firefox, ignoring codec for track:', track);\n\t\t\t\t\t\t} else if(typeof track.codec !== 'string') {\n\t\t\t\t\t\t\tJanus.warn('Invalid codec value, ignoring for track:', track);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet mimeType = kind + '/' + track.codec.toLowerCase();\n\t\t\t\t\t\t\tlet codecs = RTCRtpReceiver.getCapabilities(kind).codecs.filter(function(codec) {\n\t\t\t\t\t\t\t\treturn codec.mimeType.toLowerCase() === mimeType;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(!codecs || codecs.length === 0) {\n\t\t\t\t\t\t\t\tJanus.warn('Codec not supported in this browser for this track, ignoring:', track);\n\t\t\t\t\t\t\t} else if(transceiver) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\ttransceiver.setCodecPreferences(codecs);\n\t\t\t\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\t\t\t\tJanus.warn('Failed enforcing codec for this ' + kind + ' track:', err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(track.bitrate) {\n\t\t\t\t\t\t// Override maximum bitrate\n\t\t\t\t\t\tif(track.simulcast || track.svc) {\n\t\t\t\t\t\t\tJanus.warn('Ignoring bitrate for simulcast/SVC track, use sendEncodings for that');\n\t\t\t\t\t\t} else if(isNaN(track.bitrate) || track.bitrate < 0) {\n\t\t\t\t\t\t\tJanus.warn('Ignoring invalid bitrate for track:', track);\n\t\t\t\t\t\t} else if(sender) {\n\t\t\t\t\t\t\tlet params = sender.getParameters();\n\t\t\t\t\t\t\tif(!params || !params.encodings || params.encodings.length === 0) {\n\t\t\t\t\t\t\t\tJanus.warn('No encodings in the sender parameters, ignoring bitrate for track:', track);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparams.encodings[0].maxBitrate = track.bitrate;\n\t\t\t\t\t\t\t\tawait sender.setParameters(params);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(kind === 'video' && track.framerate) {\n\t\t\t\t\t\t// Override maximum framerate\n\t\t\t\t\t\tif(track.simulcast || track.svc) {\n\t\t\t\t\t\t\tJanus.warn('Ignoring framerate for simulcast/SVC track, use sendEncodings for that');\n\t\t\t\t\t\t} else if(isNaN(track.framerate) || track.framerate < 0) {\n\t\t\t\t\t\t\tJanus.warn('Ignoring invalid framerate for track:', track);\n\t\t\t\t\t\t} else if(sender) {\n\t\t\t\t\t\t\tlet params = sender.getParameters();\n\t\t\t\t\t\t\tif(!params || !params.encodings || params.encodings.length === 0) {\n\t\t\t\t\t\t\t\tJanus.warn('No encodings in the sender parameters, ignoring framerate for track:', track);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparams.encodings[0].maxFramerate = track.framerate;\n\t\t\t\t\t\t\t\tawait sender.setParameters(params);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Check if insertable streams are involved\n\t\t\t\t\tif(track.transforms) {\n\t\t\t\t\t\tif(sender && track.transforms.sender) {\n\t\t\t\t\t\t\t// There's a sender transform, set it on the transceiver sender\n\t\t\t\t\t\t\tlet senderStreams = null;\n\t\t\t\t\t\t\tif(RTCRtpSender.prototype.createEncodedStreams) {\n\t\t\t\t\t\t\t\tsenderStreams = sender.createEncodedStreams();\n\t\t\t\t\t\t\t} else if(RTCRtpSender.prototype.createAudioEncodedStreams || RTCRtpSender.prototype.createEncodedVideoStreams) {\n\t\t\t\t\t\t\t\tif(kind === 'audio') {\n\t\t\t\t\t\t\t\t\tsenderStreams = sender.createEncodedAudioStreams();\n\t\t\t\t\t\t\t\t} else if(kind === 'video') {\n\t\t\t\t\t\t\t\t\tsenderStreams = sender.createEncodedVideoStreams();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(senderStreams) {\n\t\t\t\t\t\t\t\tif(senderStreams.readableStream && senderStreams.writableStream) {\n\t\t\t\t\t\t\t\t\tsenderStreams.readableStream\n\t\t\t\t\t\t\t\t\t\t.pipeThrough(track.transforms.sender)\n\t\t\t\t\t\t\t\t\t\t.pipeTo(senderStreams.writableStream);\n\t\t\t\t\t\t\t\t} else if(senderStreams.readable && senderStreams.writable) {\n\t\t\t\t\t\t\t\t\tsenderStreams.readable\n\t\t\t\t\t\t\t\t\t\t.pipeThrough(track.transforms.sender)\n\t\t\t\t\t\t\t\t\t\t.pipeTo(senderStreams.writable);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(transceiver && transceiver.receiver && track.transforms.receiver) {\n\t\t\t\t\t\t\t// There's a receiver transform, set it on the transceiver receiver\n\t\t\t\t\t\t\tlet receiverStreams = null;\n\t\t\t\t\t\t\tif(RTCRtpReceiver.prototype.createEncodedStreams) {\n\t\t\t\t\t\t\t\treceiverStreams = transceiver.receiver.createEncodedStreams();\n\t\t\t\t\t\t\t} else if(RTCRtpReceiver.prototype.createAudioEncodedStreams || RTCRtpReceiver.prototype.createEncodedVideoStreams) {\n\t\t\t\t\t\t\t\tif(kind === 'audio') {\n\t\t\t\t\t\t\t\t\treceiverStreams = transceiver.receiver.createEncodedAudioStreams();\n\t\t\t\t\t\t\t\t} else if(kind === 'video') {\n\t\t\t\t\t\t\t\t\treceiverStreams = transceiver.receiver.createEncodedVideoStreams();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(receiverStreams) {\n\t\t\t\t\t\t\t\tif(receiverStreams.readableStream && receiverStreams.writableStream) {\n\t\t\t\t\t\t\t\t\treceiverStreams.readableStream\n\t\t\t\t\t\t\t\t\t\t.pipeThrough(track.transforms.receiver)\n\t\t\t\t\t\t\t\t\t\t.pipeTo(receiverStreams.writableStream);\n\t\t\t\t\t\t\t\t} else if(receiverStreams.readable && receiverStreams.writable) {\n\t\t\t\t\t\t\t\t\treceiverStreams.readable\n\t\t\t\t\t\t\t\t\t\t.pipeThrough(track.transforms.receiver)\n\t\t\t\t\t\t\t\t\t\t.pipeTo(receiverStreams.writable);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(nt && track.dontStop === true)\n\t\t\t\t\tnt.dontStop = true;\n\t\t\t} else if(track.recv) {\n\t\t\t\t// Maybe a new recvonly track\n\t\t\t\tif(!transceiver)\n\t\t\t\t\ttransceiver = config.pc.addTransceiver(kind);\n\t\t\t\tif(transceiver) {\n\t\t\t\t\t// Check if we need to override some settings\n\t\t\t\t\tif(track.codec) {\n\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n\t\t\t\t\t\t\tJanus.warn('setCodecPreferences not supported in Firefox, ignoring codec for track:', track);\n\t\t\t\t\t\t} else if(typeof track.codec !== 'string') {\n\t\t\t\t\t\t\tJanus.warn('Invalid codec value, ignoring for track:', track);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet mimeType = kind + '/' + track.codec.toLowerCase();\n\t\t\t\t\t\t\tlet codecs = RTCRtpReceiver.getCapabilities(kind).codecs.filter(function(codec) {\n\t\t\t\t\t\t\t\treturn codec.mimeType.toLowerCase() === mimeType;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(!codecs || codecs.length === 0) {\n\t\t\t\t\t\t\t\tJanus.warn('Codec not supported in this browser for this track, ignoring:', track);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\ttransceiver.setCodecPreferences(codecs);\n\t\t\t\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\t\t\t\tJanus.warn('Failed enforcing codec for this ' + kind + ' track:', err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Check if insertable streams are involved\n\t\t\t\t\tif(transceiver.receiver && track.transforms && track.transforms.receiver) {\n\t\t\t\t\t\t// There's a receiver transform, set it on the transceiver receiver\n\t\t\t\t\t\tlet receiverStreams = null;\n\t\t\t\t\t\tif(RTCRtpReceiver.prototype.createEncodedStreams) {\n\t\t\t\t\t\t\treceiverStreams = transceiver.receiver.createEncodedStreams();\n\t\t\t\t\t\t} else if(RTCRtpReceiver.prototype.createAudioEncodedStreams || RTCRtpReceiver.prototype.createEncodedVideoStreams) {\n\t\t\t\t\t\t\tif(kind === 'audio') {\n\t\t\t\t\t\t\t\treceiverStreams = transceiver.receiver.createEncodedAudioStreams();\n\t\t\t\t\t\t\t} else if(kind === 'video') {\n\t\t\t\t\t\t\t\treceiverStreams = transceiver.receiver.createEncodedVideoStreams();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(receiverStreams) {\n\t\t\t\t\t\t\tif(receiverStreams.readableStream && receiverStreams.writableStream) {\n\t\t\t\t\t\t\t\treceiverStreams.readableStream\n\t\t\t\t\t\t\t\t\t.pipeThrough(track.transforms.receiver)\n\t\t\t\t\t\t\t\t\t.pipeTo(receiverStreams.writableStream);\n\t\t\t\t\t\t\t} else if(receiverStreams.readable && receiverStreams.writable) {\n\t\t\t\t\t\t\t\treceiverStreams.readable\n\t\t\t\t\t\t\t\t\t.pipeThrough(track.transforms.receiver)\n\t\t\t\t\t\t\t\t\t.pipeTo(receiverStreams.writable);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(nt) {\n\t\t\t\t// FIXME Add the new track locally\n\t\t\t\tconfig.myStream.addTrack(nt);\n\t\t\t\t// Notify the application about the new local track, if any\n\t\t\t\tnt.onended = function(ev) {\n\t\t\t\t\tJanus.log('Local track removed:', ev);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpluginHandle.onlocaltrack(ev.target, false);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tJanus.error(\"Error calling onlocaltrack following end\", e);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tpluginHandle.onlocaltrack(nt, true);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tJanus.error(\"Error calling onlocaltrack for track add\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Update the direction of the transceiver\n\t\t\tif(transceiver) {\n\t\t\t\tlet curdir = transceiver.direction, newdir = null;\n\t\t\t\tlet send = (nt && transceiver.sender.track),\n\t\t\t\t\trecv = (track.recv !== false && transceiver.receiver.track);\n\t\t\t\tif(send && recv)\n\t\t\t\t\tnewdir = 'sendrecv';\n\t\t\t\telse if(send && !recv)\n\t\t\t\t\tnewdir = 'sendonly';\n\t\t\t\telse if(!send && recv)\n\t\t\t\t\tnewdir = 'recvonly';\n\t\t\t\telse if(!send && !recv)\n\t\t\t\t\tnewdir = 'inactive';\n\t\t\t\tif(newdir && newdir !== curdir) {\n\t\t\t\t\tJanus.warn('Changing direction of transceiver to ' + newdir + ' (was ' + curdir + ')', track);\n\t\t\t\t\tif(transceiver.setDirection)\n\t\t\t\t\t\ttransceiver.setDirection(newdir);\n\t\t\t\t\telse\n\t\t\t\t\t\ttransceiver.direction = newdir;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(openedConsentDialog)\n\t\t\tpluginHandle.consentDialog(false);\n\t}\n\n\tfunction getLocalTracks(handleId) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn('Invalid handle');\n\t\t\treturn null;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn('Invalid PeerConnection');\n\t\t\treturn null;\n\t\t}\n\t\tlet tracks = [];\n\t\tlet transceivers = config.pc.getTransceivers();\n\t\tfor(let tr of transceivers) {\n\t\t\tlet track = null;\n\t\t\tif(tr.sender && tr.sender.track) {\n\t\t\t\ttrack = { mid: tr.mid };\n\t\t\t\ttrack.type = tr.sender.track.kind;\n\t\t\t\ttrack.id = tr.sender.track.id;\n\t\t\t\ttrack.label = tr.sender.track.label;\n\t\t\t}\n\t\t\tif(track)\n\t\t\t\ttracks.push(track);\n\t\t}\n\t\treturn tracks;\n\t}\n\n\tfunction getRemoteTracks(handleId) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn('Invalid handle');\n\t\t\treturn null;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn('Invalid PeerConnection');\n\t\t\treturn null;\n\t\t}\n\t\tlet tracks = [];\n\t\tlet transceivers = config.pc.getTransceivers();\n\t\tfor(let tr of transceivers) {\n\t\t\tlet track = null;\n\t\t\tif(tr.receiver && tr.receiver.track) {\n\t\t\t\ttrack = { mid: tr.mid };\n\t\t\t\ttrack.type = tr.receiver.track.kind;\n\t\t\t\ttrack.id = tr.receiver.track.id;\n\t\t\t\ttrack.label = tr.receiver.track.label;\n\t\t\t}\n\t\t\tif(track)\n\t\t\t\ttracks.push(track);\n\t\t}\n\t\treturn tracks;\n\t}\n\n\tfunction getVolume(handleId, mid, remote, result) {\n\t\tresult = (typeof result == \"function\") ? result : Janus.noop;\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tresult(0);\n\t\t\treturn;\n\t\t}\n\t\tlet stream = remote ? \"remote\" : \"local\";\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.volume[stream])\n\t\t\tconfig.volume[stream] = { value: 0 };\n\t\t// Start getting the volume, if audioLevel in getStats is supported (apparently\n\t\t// they're only available in Chrome/Safari right now: https://webrtc-stats.callstats.io/)\n\t\tif(config.pc && config.pc.getStats && (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" ||\n\t\t\t\tJanus.webRTCAdapter.browserDetails.browser === \"safari\")) {\n\t\t\t// Are we interested in a mid in particular?\n\t\t\tlet query = config.pc;\n\t\t\tif(mid) {\n\t\t\t\tlet transceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === mid && t.receiver.track.kind === \"audio\"));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"No audio transceiver with mid \" + mid);\n\t\t\t\t\tresult(0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(remote && !transceiver.receiver) {\n\t\t\t\t\tJanus.warn(\"Remote transceiver track unavailable\");\n\t\t\t\t\tresult(0);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(!remote && !transceiver.sender) {\n\t\t\t\t\tJanus.warn(\"Local transceiver track unavailable\");\n\t\t\t\t\tresult(0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tquery = remote ? transceiver.receiver : transceiver.sender;\n\t\t\t}\n\t\t\tquery.getStats()\n\t\t\t\t.then(function(stats) {\n\t\t\t\t\tstats.forEach(function (res) {\n\t\t\t\t\t\tif(!res || res.kind !== \"audio\")\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tif((remote && !res.remoteSource) || (!remote && res.type !== \"media-source\"))\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tresult(res.audioLevel ? res.audioLevel : 0);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\treturn config.volume[stream].value;\n\t\t} else {\n\t\t\t// audioInputLevel and audioOutputLevel seem only available in Chrome? audioLevel\n\t\t\t// seems to be available on Chrome and Firefox, but they don't seem to work\n\t\t\tJanus.warn(\"Getting the \" + stream + \" volume unsupported by browser\");\n\t\t\tresult(0);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction isMuted(handleId, mid, video) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn true;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn true;\n\t\t}\n\t\tif(!config.myStream) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn true;\n\t\t}\n\t\tif(video) {\n\t\t\t// Check video track\n\t\t\tif(!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(mid) {\n\t\t\t\tlet transceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === mid && t.receiver.track.kind === \"video\"));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"No video transceiver with mid \" + mid);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif(!transceiver.sender || !transceiver.sender.track) {\n\t\t\t\t\tJanus.warn(\"No video sender with mid \" + mid);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn !transceiver.sender.track.enabled;\n\t\t\t} else {\n\t\t\t\treturn !config.myStream.getVideoTracks()[0].enabled;\n\t\t\t}\n\t\t} else {\n\t\t\t// Check audio track\n\t\t\tif(!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(mid) {\n\t\t\t\tlet transceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === mid && t.receiver.track.kind === \"audio\"));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"No audio transceiver with mid \" + mid);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif(!transceiver.sender || !transceiver.sender.track) {\n\t\t\t\t\tJanus.warn(\"No audio sender with mid \" + mid);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn !transceiver.sender.track.enabled;\n\t\t\t} else {\n\t\t\t\treturn !config.myStream.getAudioTracks()[0].enabled;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mute(handleId, mid, video, mute) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn false;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn false;\n\t\t}\n\t\tif(!config.myStream) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn false;\n\t\t}\n\t\tif(video) {\n\t\t\t// Mute/unmute video track\n\t\t\tif(!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(mid) {\n\t\t\t\tlet transceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === mid && t.receiver.track.kind === \"video\"));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"No video transceiver with mid \" + mid);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!transceiver.sender || !transceiver.sender.track) {\n\t\t\t\t\tJanus.warn(\"No video sender with mid \" + mid);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttransceiver.sender.track.enabled = mute ? false : true;\n\t\t\t} else {\n\t\t\t\tfor(const videostream of config.myStream.getVideoTracks()) {\n\t\t\t\t\tvideostream.enabled = !mute;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Mute/unmute audio track\n\t\t\tif(!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(mid) {\n\t\t\t\tlet transceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === mid && t.receiver.track.kind === \"audio\"));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"No audio transceiver with mid \" + mid);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!transceiver.sender || !transceiver.sender.track) {\n\t\t\t\t\tJanus.warn(\"No audio sender with mid \" + mid);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttransceiver.sender.track.enabled = mute ? false : true;\n\t\t\t} else {\n\t\t\t\tfor(const audiostream of config.myStream.getAudioTracks()) {\n\t\t\t\t\taudiostream.enabled = !mute;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction getBitrate(handleId, mid) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn \"Invalid handle\";\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc)\n\t\t\treturn \"Invalid PeerConnection\";\n\t\t// Start getting the bitrate, if getStats is supported\n\t\tif(config.pc.getStats) {\n\t\t\tlet query = config.pc;\n\t\t\tlet target = mid ? mid : \"default\";\n\t\t\tif(mid) {\n\t\t\t\tlet transceiver = config.pc.getTransceivers()\n\t\t\t\t\t.find(t => (t.mid === mid && t.receiver.track.kind === \"video\"));\n\t\t\t\tif(!transceiver) {\n\t\t\t\t\tJanus.warn(\"No video transceiver with mid \" + mid);\n\t\t\t\t\treturn (\"No video transceiver with mid \" + mid);\n\t\t\t\t}\n\t\t\t\tif(!transceiver.receiver) {\n\t\t\t\t\tJanus.warn(\"No video receiver with mid \" + mid);\n\t\t\t\t\treturn (\"No video receiver with mid \" + mid);\n\t\t\t\t}\n\t\t\t\tquery = transceiver.receiver;\n\t\t\t}\n\t\t\tif(!config.bitrate[target]) {\n\t\t\t\tconfig.bitrate[target] = {\n\t\t\t\t\ttimer: null,\n\t\t\t\t\tbsnow: null,\n\t\t\t\t\tbsbefore: null,\n\t\t\t\t\ttsnow: null,\n\t\t\t\t\ttsbefore: null,\n\t\t\t\t\tvalue: \"0 kbits/sec\"\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!config.bitrate[target].timer) {\n\t\t\t\tJanus.log(\"Starting bitrate timer\" + (mid ? (\" for mid \" + mid) : \"\") + \" (via getStats)\");\n\t\t\t\tconfig.bitrate[target].timer = setInterval(function() {\n\t\t\t\t\tquery.getStats()\n\t\t\t\t\t\t.then(function(stats) {\n\t\t\t\t\t\t\tstats.forEach(function (res) {\n\t\t\t\t\t\t\t\tif(!res)\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\tlet inStats = false;\n\t\t\t\t\t\t\t\t// Check if these are statistics on incoming media\n\t\t\t\t\t\t\t\tif((res.mediaType === \"video\" || res.id.toLowerCase().indexOf(\"video\") > -1) &&\n\t\t\t\t\t\t\t\t\t\tres.type === \"inbound-rtp\" && res.id.indexOf(\"rtcp\") < 0) {\n\t\t\t\t\t\t\t\t\t// New stats\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t} else if(res.type == 'ssrc' && res.bytesReceived &&\n\t\t\t\t\t\t\t\t\t\t(res.googCodecName === \"VP8\" || res.googCodecName === \"\")) {\n\t\t\t\t\t\t\t\t\t// Older Chromer versions\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Parse stats now\n\t\t\t\t\t\t\t\tif(inStats) {\n\t\t\t\t\t\t\t\t\tconfig.bitrate[target].bsnow = res.bytesReceived;\n\t\t\t\t\t\t\t\t\tconfig.bitrate[target].tsnow = res.timestamp;\n\t\t\t\t\t\t\t\t\tif(config.bitrate[target].bsbefore === null || config.bitrate[target].tsbefore === null) {\n\t\t\t\t\t\t\t\t\t\t// Skip this round\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate[target].bsbefore = config.bitrate[target].bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate[target].tsbefore = config.bitrate[target].tsnow;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Calculate bitrate\n\t\t\t\t\t\t\t\t\t\tlet timePassed = config.bitrate[target].tsnow - config.bitrate[target].tsbefore;\n\t\t\t\t\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"safari\")\n\t\t\t\t\t\t\t\t\t\t\ttimePassed = timePassed/1000;\t// Apparently the timestamp is in microseconds, in Safari\n\t\t\t\t\t\t\t\t\t\tlet bitRate = Math.round((config.bitrate[target].bsnow - config.bitrate[target].bsbefore) * 8 / timePassed);\n\t\t\t\t\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"safari\")\n\t\t\t\t\t\t\t\t\t\t\tbitRate = parseInt(bitRate/1000);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate[target].value = bitRate + ' kbits/sec';\n\t\t\t\t\t\t\t\t\t\t//~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate[target].bsbefore = config.bitrate[target].bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate[target].tsbefore = config.bitrate[target].tsnow;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}, 1000);\n\t\t\t\treturn \"0 kbits/sec\";\t// We don't have a bitrate value yet\n\t\t\t}\n\t\t\treturn config.bitrate[target].value;\n\t\t} else {\n\t\t\tJanus.warn(\"Getting the video bitrate unsupported by browser\");\n\t\t\treturn \"Feature unsupported by browser\";\n\t\t}\n\t}\n\n\tfunction setBitrate(handleId, mid, bitrate) {\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn('Invalid handle');\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(!config.pc) {\n\t\t\tJanus.warn('Invalid PeerConnection');\n\t\t\treturn;\n\t\t}\n\t\tlet transceiver = config.pc.getTransceivers().find(t => (t.mid === mid));\n\t\tif(!transceiver) {\n\t\t\tJanus.warn('No transceiver with mid', mid);\n\t\t\treturn;\n\t\t}\n\t\tif(!transceiver.sender) {\n\t\t\tJanus.warn('No sender for transceiver with mid', mid);\n\t\t\treturn;\n\t\t}\n\t\tlet params = transceiver.sender.getParameters();\n\t\tif(!params || !params.encodings || params.encodings.length === 0) {\n\t\t\tJanus.warn('No parameters encodings');\n\t\t} else if(params.encodings.length > 1) {\n\t\t\tJanus.warn('Ignoring bitrate for simulcast track, use sendEncodings for that');\n\t\t} else if(isNaN(bitrate) || bitrate < 0) {\n\t\t\tJanus.warn('Invalid bitrate (must be a positive integer)');\n\t\t} else {\n\t\t\tparams.encodings[0].maxBitrate = bitrate;\n\t\t\ttransceiver.sender.setParameters(params);\n\t\t}\n\t}\n\n\tfunction webrtcError(error) {\n\t\tJanus.error(\"WebRTC error:\", error);\n\t}\n\n\tfunction cleanupWebrtc(handleId, hangupRequest) {\n\t\tJanus.log(\"Cleaning WebRTC stuff\");\n\t\tlet pluginHandle = pluginHandles.get(handleId);\n\t\tif(!pluginHandle) {\n\t\t\t// Nothing to clean\n\t\t\treturn;\n\t\t}\n\t\tlet config = pluginHandle.webrtcStuff;\n\t\tif(config) {\n\t\t\tif(hangupRequest === true) {\n\t\t\t\t// Send a hangup request (we don't really care about the response)\n\t\t\t\tlet request = { \"janus\": \"hangup\", \"transaction\": Janus.randomString(12) };\n\t\t\t\tif(pluginHandle.token)\n\t\t\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\t\t\tif(apisecret)\n\t\t\t\t\trequest[\"apisecret\"] = apisecret;\n\t\t\t\tJanus.debug(\"Sending hangup request (handle=\" + handleId + \"):\");\n\t\t\t\tJanus.debug(request);\n\t\t\t\tif(websockets) {\n\t\t\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t} else {\n\t\t\t\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\t\t\t\tverb: 'POST',\n\t\t\t\t\t\twithCredentials: withCredentials,\n\t\t\t\t\t\tbody: request\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Cleanup stack\n\t\t\tif(config.volume) {\n\t\t\t\tif(config.volume[\"local\"] && config.volume[\"local\"].timer)\n\t\t\t\t\tclearInterval(config.volume[\"local\"].timer);\n\t\t\t\tif(config.volume[\"remote\"] && config.volume[\"remote\"].timer)\n\t\t\t\t\tclearInterval(config.volume[\"remote\"].timer);\n\t\t\t}\n\t\t\tfor(let i in config.bitrate) {\n\t\t\t\tif(config.bitrate[i].timer)\n\t\t\t\t\tclearInterval(config.bitrate[i].timer);\n\t\t\t}\n\t\t\tconfig.bitrate = {};\n\t\t\tif(!config.streamExternal && config.myStream) {\n\t\t\t\tJanus.log(\"Stopping local stream tracks\");\n\t\t\t\tJanus.stopAllTracks(config.myStream);\n\t\t\t}\n\t\t\tconfig.streamExternal = false;\n\t\t\tconfig.myStream = null;\n\t\t\t// Close PeerConnection\n\t\t\ttry {\n\t\t\t\tconfig.pc.close();\n\t\t\t} catch(e) {\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\tconfig.pc = null;\n\t\t\tconfig.candidates = null;\n\t\t\tconfig.mySdp = null;\n\t\t\tconfig.remoteSdp = null;\n\t\t\tconfig.iceDone = false;\n\t\t\tconfig.dataChannel = {};\n\t\t\tconfig.dtmfSender = null;\n\t\t\tconfig.insertableStreams = false;\n\t\t\tconfig.externalEncryption = false;\n\t\t}\n\t\tpluginHandle.oncleanup();\n\t}\n\n\tfunction isTrickleEnabled(trickle) {\n\t\tJanus.debug(\"isTrickleEnabled:\", trickle);\n\t\treturn (trickle === false) ? false : true;\n\t}\n}\n\nexport { Janus as default };\n"],"names":["Janus","sessions","Map","isExtensionEnabled","navigator","mediaDevices","getDisplayMedia","window","userAgent","match","chromever","parseInt","maxver","extension","isInstalled","defaultExtension","extensionId","document","querySelector","getScreen","callback","pending","setTimeout","error","Error","name","cache","postMessage","type","id","init","addEventListener","event","origin","location","data","sourceId","clearTimeout","gatewayCallbacks","success","noop","destroyed","initDone","isWebrtcSupported","log","server","websockets","ws","wsHandlers","wsKeepaliveTimeoutId","servers","serversIndex","isArray","length","debug","indexOf","iceServers","urls","iceTransportPolicy","bundlePolicy","withCredentials","maxev","max_poll_events","token","apisecret","destroyOnUnload","this","keepAlivePeriod","isNaN","longPollTimeout","getMaxBitrates","simulcastMaxBitrates","maxBitrates","high","medium","low","connected","sessionId","pluginHandles","that","retries","transactions","eventHandler","warn","longpoll","Date","getTime","encodeURIComponent","httpAPICall","verb","handleEvent","timeout","textStatus","errorThrown","json","skipTimeout","sender","pluginHandle","get","candidate","config","webrtcStuff","pc","remoteSdp","completed","addIceCandidate","endOfCandidates","candidates","push","webrtcState","hangup","ondetached","detach","mediaState","slowLink","code","reason","transaction","reportSuccess","delete","plugindata","jsep","onmessage","close","vdebug","i","keepAlive","request","randomString","send","JSON","stringify","createSession","callbacks","onopen","onerror","onclose","newWebSocket","set","parse","eventName","body","message","sendMessage","handleId","sdp","e2ee","rid_order","force_relay","svc","transceivers","getTransceivers","mindex","tr","track","kind","params","getParameters","encodings","scalabilityMode","mid","sendTrickleCandidate","createDataChannel","dclabel","dcprotocol","incoming","pendingData","onDataChannelStateChange","label","target","protocol","dcState","dataChannel","readyState","ondataopen","dcoptions","dataChannelOptions","ondata","sendData","text","dataChanDefaultLabel","sendDtmf","dtmfSender","audioSender","getSenders","find","dtmf","ontonechange","tone","tones","duration","gap","insertDTMF","destroyHandle","noRequest","cleanupWebrtc","detached","createPeerconnectionIfNeeded","pc_config","insertableStreams","tracks","transforms","receiver","externalEncryption","RTCRtpSender","prototype","createEncodedStreams","createEncodedAudioStreams","createEncodedVideoStreams","forceEncodedAudioInsertableStreams","forceEncodedVideoInsertableStreams","encodedInsertableStreams","RTCPeerConnection","getStats","volume","bitrate","value","trickle","oniceconnectionstatechange","iceState","iceConnectionState","onicecandidate","iceDone","mySdp","localDescription","sdpSent","sendSDP","sdpMid","sdpMLineIndex","ontrack","streams","transceiver","onremotetrack","e","onended","trackMutedTimeoutId","ev","t","onmute","onunmute","prepareWebrtc","offer","webrtcError","media","mediaToTracks","simulcast","simulcast2","Array","captureDevices","setRemoteDescription","answer","customizeSdp","createAnswer","setLocalDescription","mediaConstraints","iceRestart","createOffer","err","prepareWebrtcPeer","then","replaceTracks","add","replace","remove","openedConsentDialog","groups","gumGroup","includes","capture","MediaStreamTrack","group","keys","Object","key","audio","video","ondatachannel","channel","nt","trackId","replaceTrack","myStream","rt","getAudioTracks","getVideoTracks","removeTrack","onlocaltrack","dontStop","stop","stream","consentDialog","constraints","trackConstraints","otherType","otherTrack","otherConstraints","getUserMedia","newDirection","recv","direction","setDirection","MediaStream","addTrack","webRTCAdapter","browserDetails","browser","addTransceiver","sendEncodings","rid","active","maxBitrate","scaleResolutionDownBy","parameters","setParameters","codec","mimeType","toLowerCase","codecs","RTCRtpReceiver","getCapabilities","filter","setCodecPreferences","framerate","maxFramerate","senderStreams","createAudioEncodedStreams","readableStream","writableStream","pipeThrough","pipeTo","readable","writable","receiverStreams","curdir","newdir","getLocalTracks","getRemoteTracks","getVolume","remote","result","query","stats","forEach","res","remoteSource","audioLevel","isMuted","enabled","mute","videostream","audiostream","getBitrate","timer","bsnow","bsbefore","tsnow","tsbefore","setInterval","inStats","mediaType","bytesReceived","googCodecName","timestamp","timePassed","bitRate","Math","round","setBitrate","hangupRequest","clearInterval","streamExternal","stopAllTracks","oncleanup","getServer","isConnected","reconnect","getSessionId","getInfo","destroy","unload","notifyDestroyed","cleanupHandles","sendBeacon","unbindWebSocket","removeEventListener","onUnbindMessage","onUnbindError","session_id","destroySession","attach","ordered","plugin","opaqueId","loopIndex","handleToken","session","started","getId","getPlugin","getRemoteVolume","getLocalVolume","isAudioMuted","muteAudio","unmuteAudio","isVideoMuted","muteVideo","unmuteVideo","setMaxBitrate","handleRemoteJsep","sendRequest","createHandle","useDefaultDependencies","deps","f","fetch","p","Promise","socketCls","WebSocket","proto","arr","adapter","url","options","fetchOptions","method","headers","credentials","fetching","catch","reject","resolve","timerId","race","response","ok","parsed","useOldDependencies","jq","jQuery","payload","contentType","xhrFields","ajax","extend","dataType","async","xhr","status","keepAudio","audioSend","audioRecv","addAudio","replaceAudio","removeAudio","keepVideo","videoSend","videoRecv","addVideo","replaceVideo","removeVideo","screenshareFrameRate","frameRate","screenshareHeight","height","screenshareWidth","width","ideal","getTracks","mst","console","trace","bind","d","usedDependencies","dependencies","listDevices","isGetUserMediaAvailable","enumerateDevices","devices","attachMediaStream","element","srcObject","src","URL","createObjectURL","reattachMediaStream","to","from","platform","oldOBF","safariVp8","safariVp9","version","testpc","offerToReceiveVideo","len","charSet","randomPoz","floor","random","charAt"],"mappings":"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"}