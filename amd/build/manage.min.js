define("block_deft/manage",["exports","core_form/modalform","core/templates","core/log","core/str"],(function(_exports,_modalform,_templates,_log,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * Manage task user interface handlers
   *
   * @package    block_deft
   * @module     block_deft/manage
   * @copyright  2022 Daniel Thies <dethies@gmail.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */var contextid;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=_interopRequireDefault(_modalform),_templates=_interopRequireDefault(_templates),_log=_interopRequireDefault(_log);const submitForm=e=>{if(_log.default.debug("Form submitted"),e.detail&&e.detail.order)e.detail.order.forEach((task=>{document.querySelector(".tasks > div").appendChild(document.querySelector('.tasks [data-id="'+task+'"]').parentNode)}));else if(e.detail&&e.detail.id){if(document.querySelector('[data-id="'+e.detail.id+'"] [data-region="taskinfo"]'))return void(e.detail.html?_templates.default.replaceNodeContents(document.querySelector('[data-id="'+e.detail.id+'"] [data-region="taskinfo"]'),e.detail.html,""):document.querySelector('.tasks [data-id="'+e.detail.id+'"]').parentNode.remove(!0));_templates.default.render("block_deft/task",e.detail).done(((html,js)=>{const node=document.createElement("div");node.innerHTML=html,document.querySelector(".tasks > div").appendChild(node.firstChild),_templates.default.runTemplateJS(js)}))}},handleSubmit=e=>{if(e.target.matches("form")&&!e.target.closest('[data-region="status"]')){let title,formdata=new FormData(e.target),component=e.target.closest("[data-component]")&&e.target.closest("[data-component]").getAttribute("data-component")||"block_deft",id=formdata.get("id")||0,type=formdata.get("type")||e.submitter.value,action="action"===e.submitter.name&&e.submitter.value;switch(e.preventDefault(),e.stopPropagation(),"delete"!==action&&"move"!==action||(type=action),action){case"delete":title=(0,_str.get_string)("confirm","core");break;case"move":title=(0,_str.get_string)("move","core");break;case"saveall":return void document.querySelectorAll('[data-region="status"] form.modified input[type="submit"]').forEach((form=>{form.click()}));case"status":title=(0,_str.get_string)("changestatus","block_deft");break;default:title=(0,_str.get_string)("edit"+type,"block_deft")}_log.default.debug("Create "+type);let modalForm=new _modalform.default({formClass:component+"\\form\\"+("status"===action?"status_":"edit_")+type,args:{contextid:contextid,id:id},modalConfig:{title:title}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,submitForm),modalForm.show()}},handleChange=e=>{let form=e.target.closest('[data-region="status"] form');if(form){const data=new FormData(form),params=new URLSearchParams(data);form.getAttribute("data-value")===params.toString()?form.classList.remove("modified"):form.classList.add("modified")}};_exports.init=id=>{contextid=id,document.removeEventListener("submit",handleSubmit),document.addEventListener("submit",handleSubmit),document.removeEventListener("change",handleChange),document.addEventListener("change",handleChange)}}));

//# sourceMappingURL=manage.min.js.map